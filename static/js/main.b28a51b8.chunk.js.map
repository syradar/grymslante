{"version":3,"sources":["components/navbar.tsx","components/footer.tsx","styles.ts","components/stepper.tsx","components/heading.tsx","pages/skills.tsx","components/segmented-control.tsx","utils/dice-roller.ts","pages/dice.tsx","pages/home.tsx","components/name-list.tsx","utils/utils.ts","components/names-people.tsx","components/generic-name-generator.tsx","pages/names.tsx","pages/changelog.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","css","to","Footer","href","Date","getFullYear","card","buttonPrimary","Stepper","props","twProps","label","htmlFor","id","type","onClick","value","min","onChange","aria-controls","margin","step","max","e","parseInt","handleChange","target","Heading","h3","children","lowest","atLeastOne","getSkillCost","initial","modifier","cost","Skills","useState","current","setCurrent","setTarget","setModifier","newCurrent","newTarget","SegmentedControl","segments","onSegmentClick","selectedIndex","vertical","gridTemplateColumns","length","gridTemplateRows","map","s","index","outline","boxShadow","style","height","width","transform","rollDice","Math","floor","random","rollDiceWithRolls","roll","sum","rolls","d5","d10","d20","exploding","ed","result","newRolls","newSum","explodingD10","Dice","active","setActive","explodeOn","setExplodeOn","rollHistory","setRollHistory","diceResult","setDiceResult","displaySign","num","abs","getDieToRoll","join","undefined","handleSegmentClick","handleModifierChange","handleExplodeOn","dieFn","die","getDieType","toString","minHeight","minWidth","maxWidth","rh","Home","NameList","heading","names","name","capitalize","toUpperCase","slice","choice","range","n","Array","from","_","key","NamesPeople","emptyNames","male","female","both","nameResult","setNameResult","toLowerCase","peopleNames","find","pn","people","generatedNames","Object","keys","suffix","filter","k","suffixes","prefix","reduce","acc","cur","values","nr","GenericNameGenerator","json","maxNames","nameGenerators","component","Names","ng","innNames","villageNames","plantNames","Changelog","App","darkMode","setDarkMode","useEffect","document","title","basename","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"01NAiDeA,EA1CA,kBACb,mOACE,2FACE,kCACE,YAAC,IAAD,CACEC,IAAO,2eACPC,GAAG,IAFL,oBAOF,kCACE,YAAC,IAAD,CACED,IAAO,2eACPC,GAAG,UAFL,UAIE,+CACA,+bAKJ,kCACE,YAAC,IAAD,CACED,IAAO,2eACPC,GAAG,QAFL,oBAOF,kCACE,YAAC,IAAD,CACED,IAAO,2eACPC,GAAG,SAFL,2BCHOC,EA7BA,kBACb,kcAKE,yDACE,YAAC,IAAD,CACEF,IAAO,8LACPC,GAAG,aAFL,yBAOF,iFACE,mNAEEE,KAAK,wCAFP,oBAMA,qEACe,2EADf,8BACqE,KAClE,IAAIC,MAAOC,wB,OC3BPC,EAAO,iBAAM,CACtB,8ZAGSC,EAAgB,iBAAM,CAC/B,yrCCOG,SAASC,EAAQC,GAiBtB,OACE,mBAAKT,IAAKS,EAAMC,QAAhB,UACGD,EAAME,OACL,kEAAuBC,QAASH,EAAMI,GAAtC,SACGJ,EAAME,QAGX,sEACE,swBAEEG,KAAK,SACLC,QA3BU,WACZN,EAAMO,MAAQP,EAAMQ,KACtBR,EAAMS,SAAST,EAAMO,MAAQ,IA0BzBG,gBAAeV,EAAMI,GAJvB,oBAQA,qBAEEb,IAAG,8wBAAE,CACH,8BAA+B,CAC7B,sBAAuB,OACvBoB,OAAQ,KAEV,8BAA+B,CAC7B,sBAAuB,OACvBA,OAAQ,OAGZN,KAAK,SACLO,KAAK,IACLR,GAAIJ,EAAMI,GACVG,MAAOP,EAAMO,MACbC,IAAKR,EAAMQ,IACXK,IAAKb,EAAMa,IACXJ,SAAU,SAACK,GAAD,OAtCG,SAACA,GACpBd,EAAMS,SAASM,SAASD,EAAG,KAAO,GAqCXE,CAAaF,EAAEG,OAAOV,UAEzC,swBAEEF,KAAK,SACLC,QAjDU,WACZN,EAAMO,MAAQP,EAAMa,KACtBb,EAAMS,SAAST,EAAMO,MAAQ,IAgDzBG,gBAAeV,EAAMI,GAJvB,qBC1DD,SAASc,EAAT,GAGoC,IAAD,IAFxCC,UAEwC,SADxCC,EACwC,EADxCA,SAEA,OAAOD,EACL,kBAAI5B,IFiBqB,CAAG,mFEjB5B,SAAqB6B,IAErB,kBAAI7B,IFaqB,CAAG,mFEb5B,SAAqB6B,ICPzB,IAAiBC,EAGXC,GAHWD,EAGU,EAHS,SAACd,GAAD,OAClCA,EAAQc,EAASA,EAASd,IAItBgB,EAAe,SAAfA,EACJC,EACAP,GAFmB,IAGnBQ,EAHmB,uDAGA,EACnBC,EAJmB,uDAIJ,EAJI,OAMnBF,GAAWP,EACPS,EACAH,EACEC,EAAU,EACVP,EACAQ,EACAC,EAAOJ,EAAWE,EAAU,EAAIC,KAG3BE,EAAS,WAAO,IAAD,EACIC,mBAAiB,GADrB,mBACnBC,EADmB,KACVC,EADU,OAEEF,mBAAiB,GAFnB,mBAEnBX,EAFmB,KAEXc,EAFW,OAGMH,mBAAiB,GAHvB,mBAGnBH,EAHmB,KAGTO,EAHS,KAmB1B,OACE,2BACE,YAACd,EAAD,+BACA,mBAAK3B,IAAKM,EAAV,UACE,wEACE,YAACE,EAAD,CACEE,QAAW,sBACXG,GAAI,UACJF,MAAO,kBACPM,IAAK,EACLK,IAAK,GACLN,MAAOsB,EACPpB,SAAU,SAACF,GAAD,OAzBlBuB,EAD2BG,EA0BsB1B,QAxB7C0B,GAAchB,GAChBc,EAAUE,EAAa,IAHC,IAACA,KA6BrB,YAAClC,EAAD,CACEE,QAAW,sBACXG,GAAI,WACJF,MAAO,qBACPM,KAAM,EACNK,IAAK,EACLN,MAAOkB,EACPhB,SAAU,SAACF,GAAD,OAAWyB,EAAYzB,SAIrC,YAACR,EAAD,CACEE,QAAW,sBACXG,GAAI,SACJF,MAAO,kBACPM,IAAK,EACLK,IAAK,GACLN,MAAOU,EACPR,SAAU,SAACF,GAAD,OAvChBwB,EAD0BG,EAwCoB3B,QAtC1C2B,GAAaL,GACfC,EAAWI,EAAY,IAHA,IAACA,KA2CtB,8DACA,oFACGX,EAAaM,EAASZ,EAAQQ,Y,89BC3ElC,SAASU,EAAT,GAKoB,IAJzBC,EAIwB,EAJxBA,SACAC,EAGwB,EAHxBA,eACAC,EAEwB,EAFxBA,cAEwB,IADxBC,gBACwB,SACxB,OACE,qZACE,mBAEEhD,IAAK,CAAC,CAAD,iDACH,CACEiD,oBAAoB,UAAD,OAAYJ,EAASK,OAArB,sBAErBF,GAAY,CACVC,oBAAqB,MACrBE,iBAAiB,UAAD,OAAYN,EAASK,OAArB,uBARtB,UAYGL,EAASO,KAAI,SAACC,EAAGC,GAAJ,OACZ,sBAGEtD,IAAK,CAAC,CAAD,mXACH,CACEuD,QAAS,kBACT,SAAU,CACRC,UAAW,sCAGfxD,YAPG,IAaYsD,IAAUP,GACrBO,IAAUP,EAAgB,EACtB,EACA,GAGRO,IAAUT,EAASK,OAAS,IACzBF,GACDhD,YAFF,KAWAsD,IAAUT,EAASK,OAAS,GAC1BF,GACAhD,YAFF,MAYFe,QAAS,kBAAM+B,EAAeQ,IA7ChC,SA+CGD,GA9CIC,MAiDT,4jBAEEG,MAAO,CACLC,OAAO,GAAD,OAAKV,EAAQ,cACnBW,MAAM,GAAD,OACHX,EACI,OADI,0BAEeH,EAASK,OAAS,EAFjC,2BAGFL,EAASK,OAHP,MAMVU,UAAU,GAAD,OACPZ,EAAQ,0BAC+B,IAAhBD,EADf,eAEc,GAAhBA,EAFE,mCAI+B,IAAhBA,EAJf,eAKc,GAAhBA,EALE,kBC9Ff,IAAMc,EAAW,SAAC5C,EAAaK,GAAd,OAA8B,kBACpDL,EAAM6C,KAAKC,MAAMD,KAAKE,UAAY1C,EAAML,EAAM,MAWnCgD,EAAoB,SAAC3C,GAAD,OAAiB,WAChD,IAAM4C,EAAOL,EAAS,EAAGvC,EAAZuC,GACb,MAAO,CACLM,IAAKD,EACLE,MAAO,CAACF,MAMCG,GAFKJ,EAAkB,GAClBA,EAAkB,GAClBA,EAAkB,IACvBK,EAAML,EAAkB,IACxBM,EAAMN,EAAkB,IAE/BO,EAAY,SAAZA,IAIa,IAHjBC,EAGgB,uDAHK,GACrBL,EAEgB,uDAFE,GAClBD,EACgB,uDADF,EAERO,EAASJ,IACTK,EAAQ,sBAAOP,GAAP,CAAcM,EAAOP,MAC7BS,EAAST,EAAMO,EAAOP,IAE5B,OAAIO,EAAOP,IAAMM,EAAW,CAAEN,IAAKS,EAAQR,MAAOO,GAE3CH,EAAUC,EAAIE,EAAUC,IAGpBC,EAAe,eAACJ,EAAD,uDAAsB,GAAtB,OAA6BD,EAAUC,ICbtDK,EAAO,WAClB,IAAMjC,EAAW,CAAC,KAAM,MAAO,SAAU,OADjB,EAEIR,mBAAS,GAFb,mBAEjB0C,EAFiB,KAETC,EAFS,OASQ3C,mBAAS,GATjB,mBASjBH,EATiB,KASPO,EATO,OAeUJ,mBAAS,IAfnB,mBAejB4C,EAfiB,KAeNC,EAfM,OAqBc7C,mBAA4B,IArB1C,mBAqBjB8C,EArBiB,KAqBJC,EArBI,OAwBY/C,qBAxBZ,mBAwBjBgD,EAxBiB,KAwBLC,EAxBK,KAwClBC,EAAc,SAACC,GACnB,OAAOtD,EAAW,EAAX,YAAoBA,GAApB,iBAAsC4B,KAAK2B,IAAIvD,KAGlDwD,EAAe,WAYnB,MAAO,CAXE,WAAO7C,EAASkC,IAEjB,UACe,WAArBlC,EAASkC,GACS,KAAdE,EAAA,kBAEMA,EAFN,aAGA,IAEG,UAAmB,IAAb/C,EAAiBqD,IAAwB,GAA/C,WAEaI,KAAK,MAqB7B,OACE,2BACE,YAAChE,EAAD,0BACA,mBAAgC3B,IAAG,uEAAEM,GAArC,UACE,oCACE,yDACE,YAACsC,EAAD,CACEC,SAAUA,EACVE,cAAegC,EACfjC,eAAgB,SAACQ,GAAD,OAlFD,SAACA,GAC1B0B,EAAU1B,GACVgC,OAAcM,GAgFuBC,CAAmBvC,QAGlD,6HACE,YAAC9C,EAAD,CACEK,GAAI,eACJF,MAAO,WACPM,KAAM,GACNK,IAAK,GACLN,MAAOkB,EACPhB,SAAU,SAACF,GAAD,OAtFO,SAACA,GAC5ByB,EAAYzB,GACZsE,OAAcM,GAoFiBE,CAAqB9E,MAEtB,WAArB6B,EAASkC,IACR,YAACvE,EAAD,CACEK,GAAI,oBACJF,MAAO,aACPM,IAAK,EACLK,IAAK,GACLN,MAAOiE,EACP/D,SAAU,SAACF,GAAD,OAzFA,SAACA,GACvBkE,EAAalE,GACbsE,OAAcM,GAuFmBG,CAAgB/E,SAI3C,6FACE,sBAAchB,IAAG,IAAEO,GAAeQ,QAnD5B,WACd,IDnF8BC,ECmFxBgF,EAlCW,SAACC,GAClB,OAAQA,GACN,IAAK,KACH,OAAO5B,EACT,IAAK,MACH,OAAOC,EACT,IAAK,SACH,OAAOO,EACT,IAAK,MACL,QACE,OAAON,GAwBG2B,CAAWrD,EAASkC,IAC5BL,EAAM,2BACe,WAArB7B,EAASkC,MDrFe/D,ECqF2BiE,IDpFlD,IAAMjE,GAAS,GCqFhBgF,EAAMf,GACNe,KAHM,IAIV9D,aAEFoD,EAAcZ,GACdU,EAAe,CACb,CACEV,OAAQA,EAAOP,IAAIgC,WACnBjC,KAAMwB,MAHI,mBAKTP,MAqCG,kBACQO,YAIZ,mBAEE1F,IAAK,CAAC,CAAD,mIACH,CACEoG,UAAW,OACXC,SAAU,MACVC,SAAU,QANhB,SAUGjB,GACC,2BACE,oFAAgCA,EAAWlB,MAC3C,2RACYkB,EAAWjB,MAAMuB,KAAK,OADlC,YAEiB,IAAbzD,EAAiBqD,IAAwB,WAMnD,6BACE,4HACE,kBAAIvF,IAAK,CNtIQ,CAAG,mFMsIG,sBAAvB,0BACA,sBAAQA,IAAK,CNrJS,CAC9B,q8CMoJuCe,QAAS,kBArHnBqE,EAAe,KAqHpC,sBAIF,ibACGD,GACCA,EAAY/B,KAAI,SAACmD,GAAD,OACd,yDACE,4BAAMA,EAAGrC,OACT,mDAAqBqC,EAAG7B,2BC1K7B8B,EAAO,kBAAM,mBAAKxG,IAAKM,EAAV,iC,gBCMbmG,EAAW,SAAC,GAAiD,IAAD,IAA9CC,eAA8C,MAApC,GAAoC,MAAhCC,aAAgC,MAAxB,GAAwB,EACvE,OACE,2BACE,YAAChF,EAAD,CAASC,IAAI,EAAb,SAAoB8E,IACnBC,EAAMvD,KAAI,SAACwD,EAAMtD,GAAP,OACT,0DACGsD,GADiBA,EAAOtD,UCdtBuD,EAAa,SAACxD,GAAD,OAAeA,EAAE,GAAGyD,cAAgBzD,EAAE0D,MAAM,IAEzDC,EAAS,SAACL,GAErB,OAAOA,EADc9C,EAAS,EAAG8C,EAAMzD,OAAS,EAA3BW,KAIVoD,EAAQ,SAACC,GAAD,OAAeC,MAAMC,KAAK,CAAElE,OAAQgE,IAAK,SAACG,EAAGC,GAAJ,OAAYA,MCG7DC,EAAc,WACzB,IAAM1E,EAAW,CACf,aACA,cACA,SACA,MACA,QACA,SAGI2E,EAAa,CACjBC,KAAM,GACNC,OAAQ,GACRC,KAAM,IAbuB,EAgBKtF,mBAAS,eAAKmF,IAhBnB,mBAgBxBI,EAhBwB,KAgBZC,EAhBY,OAkBHxF,mBAAS,GAlBN,mBAkBxB0C,EAlBwB,KAkBhBC,EAlBgB,KAoBzBa,EAAqB,SAACvC,GAC1B0B,EAAU1B,GACVuE,EAAc,eAAKL,KA4CrB,OACE,iGACE,uDACE,+EACE,YAAC5E,EAAD,CACEI,UAAU,EACVH,SAAUA,EACVE,cAAegC,EACfjC,eAAgB,SAACQ,GAAD,OAAWuC,EAAmBvC,QAGlD,+FACE,YAACV,EAAD,CACEI,UAAU,EACVH,SAAUA,EACVE,cAAegC,EACfjC,eAAgB,SAACQ,GAAD,OAAWuC,EAAmBvC,WAIpD,6FACE,sBAAkBtD,IAAG,0BAAEO,GAAeQ,QApDZ,WAC9B,IAAMD,EAAO+B,EAASkC,GAAQ+C,cAExBnB,EAA2BoB,EAAYC,MAC3C,SAACC,GAAD,OAAQA,EAAGC,SAAWpH,KAGxB,GAAI6F,EAAO,CACT,IAAMwB,EAAiBC,OAAOC,KAAK1B,EAAM2B,QACtCC,QAAO,SAACC,GAAD,aAAmC,KAA5B,UAAA7B,EAAM2B,OAAOE,UAAb,eAAiBtF,WAC/BE,KAAI,SAACoF,GACJ,IAAMC,EAAW9B,EAAM2B,OAAOE,GAE9B,OAAO,eACJA,OACc5C,IAAb6C,EACIxB,EAAM,IACH7D,KAAI,SAACiE,GAAD,gBAAUL,EAAOL,EAAM+B,SAAvB,OAAiC1B,EAAOyB,OAC5CrF,IAAIyD,GACP,CAAC,QAGV8B,QAAO,SAACC,EAAKC,GAAN,mBAAC,eAAmBD,GAAQC,KAAQ,IAE9ChB,GAAc,8BAAC,eACVL,GACAW,QA0BH,8BAIF,mBAEEnI,IAAG,qCAAE,CACHiD,oBAAoB,UAAD,OACjBmF,OAAOU,OAAOlB,GAAYW,QAAO,SAACQ,GAAD,OAAsB,IAAdA,EAAG7F,UAAcA,OADzC,uBAHvB,UAQE,qDAC8B,IAA3B0E,EAAWH,KAAKvE,QACf,YAAC,EAAD,CAAUwD,QAAQ,OAAOC,MAAOiB,EAAWH,SAG/C,qDACgC,IAA7BG,EAAWF,OAAOxE,QACjB,YAAC,EAAD,CAAUwD,QAAQ,SAASC,MAAOiB,EAAWF,WAGjD,qDAC8B,IAA3BE,EAAWD,KAAKzE,QACf,YAAC,EAAD,CAAUwD,QAAQ,OAAOC,MAAOiB,EAAWD,gBCtG1CqB,EAAuB,SAAC,GAIH,IAHhCC,EAG+B,EAH/BA,KACAtI,EAE+B,EAF/BA,MAE+B,IAD/BuI,gBAC+B,MADpB,GACoB,IACK7G,mBAAmB,IADxB,mBACxBuF,EADwB,KACZC,EADY,KAGzBlB,EAA+BsC,EASrC,OACE,iGACE,yEACE,sBAEEjJ,IAAG,0BAAEO,GACLQ,QAAS,kBAZf8G,EACEZ,EAAMiC,GACH9F,KAAI,SAACiE,GAAD,gBAAUL,EAAOL,EAAM+B,SAAvB,OAAiC1B,EAAOL,EAAM2B,YAClDlF,IAAIyD,KAML,sBAKYlG,EALZ,cAQF,qDACyB,IAAtBiH,EAAW1E,QACV,YAAC,EAAD,CAAUwD,QAAS/F,EAAOgG,MAAOiB,U,wBC7BrCuB,EAAkC,CACtC,CACExI,MAAO,SACPyI,UAAW7B,GAEb,CACE5G,MAAO,OACPyI,UAAWzH,GAEb,CACEhB,MAAO,WACPyI,UAAW7B,GAEb,CACE5G,MAAO,SACPyI,UAAW7B,IAIF8B,EAAQ,WACnB,IAAMxG,EAAiCsG,EAAe/F,KAAI,SAACkG,GAAD,OAAQA,EAAG3I,SAD5C,EAEG0B,mBAAS,GAFZ,mBAElB0C,EAFkB,KAEVC,EAFU,KAQzB,OACE,2BACE,YAACrD,EAAD,8BACA,yDACE,YAACiB,EAAD,CACEC,SAAUA,EACVE,cAAegC,EACfjC,eAAgB,SAACQ,GAAD,OAXG,SAACA,GAC1B0B,EAAU1B,GAUuBuC,CAAmBvC,QAGlD,mBAAKtD,IAAG,CAAEM,EAAF,8GAAR,SACI,WACA,OAAQ6I,EAAepE,GAAQpE,OAC7B,IAAK,SACH,OAAO,YAAC,EAAD,IACT,IAAK,OACH,OAEE,WADA,CACA,gBACE,YAAC,EAAD,CACEsI,KAAMM,EACN5I,MAAO,SAHF,OAOb,IAAK,WACH,OAEE,WADA,CACA,gBACE,YAAC,EAAD,CACEsI,KAAMO,EACN7I,MAAO,aAHF,WAOb,IAAK,SACH,OAEE,WADA,CACA,gBACE,YAAC,EAAD,CACEsI,KAAMQ,EACN9I,MAAO,WAHF,SAOb,QACE,OAAO,YAAC,EAAD,KAnCX,SCrDG+I,EAAY,WACvB,OACE,mDACE,YAAC/H,EAAD,wBACA,mGACA,mBAAK3B,IAAKM,EAAV,UACE,uDACE,YAACqB,EAAD,CAASC,IAAI,EAAb,6CACA,yJAMF,uDACE,YAACD,EAAD,CAASC,IAAI,EAAb,wCACA,wYASF,uDACE,YAACD,EAAD,CAASC,IAAI,EAAb,iCACA,4GAEA,uGACE,uFACA,0FACA,8FAGA,iGAIJ,sDACE,YAACD,EAAD,CAASC,IAAI,EAAb,6BACA,0GCmBK+H,MApDf,WAAgB,IAAD,EACmBtH,oBAAS,GAD5B,mBACNuH,EADM,KACIC,EADJ,KAOb,OAJAC,qBAAU,WACRC,SAASC,MAAQ,eAChB,IAGD,YAAC,IAAD,CAAQC,SAAS,cAAjB,SACE,mBAAKC,UAAS,cAASN,EAAW,OAAS,SAA3C,SACE,6fACE,uFACE,iKACE,6VAEE7I,QAAS,kBAAM8I,GAAaD,IAF9B,SAIGA,EAAW,oBAAsB,2BAGtC,6UAIA,YAAC,EAAD,IACA,kXACE,YAAC,IAAD,WACE,YAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,SACE,YAAC,EAAD,MAEF,YAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,YAAC,EAAD,MAEF,YAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,YAAC,EAAD,MAEF,YAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,YAAC,EAAD,MAEF,YAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,YAAC,EAAD,cAKR,YAAC,EAAD,YC7CKC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,62JCFdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,qBAEA,cAAC,EAAD,OAEFjB,SAASkB,eAAe,SAM1BZ,O","file":"static/js/main.b28a51b8.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav tw=\"mb-12 bg-gray-300 dark:bg-gray-700\">\n    <ul tw=\"grid grid-flow-col gap-x-3\">\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/\"\n        >\n          Home\n        </Link>\n      </li>\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/skills\"\n        >\n          <span tw=\"\">Skills</span>\n          <span tw=\"flex items-center ml-1 p-0.5 bg-gray-300 dark:bg-gray-600 text-xs leading-none font-bold rounded text-gray-400\">\n            DODT\n          </span>\n        </Link>\n      </li>\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/dice\"\n        >\n          Dice\n        </Link>\n      </li>\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/names\"\n        >\n          Names\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navbar;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => (\n  <footer\n    tw=\"py-4 px-3 \n  flex flex-col\n  bg-gray-200 dark:bg-gray-800 text-sm dark:text-gray-400\"\n  >\n    <div tw=\"mb-3\">\n      <Link\n        css={tw`text-red-500 hover:text-red-400 hover:underline`}\n        to=\"/changelog\"\n      >\n        Changelog\n      </Link>\n    </div>\n    <div tw=\"flex justify-between\">\n      <a\n        tw=\"text-red-500 hover:text-red-400 hover:underline\"\n        href=\"https://github.com/syradar/grymslante\"\n      >\n        GitHub\n      </a>\n      <div tw=\"text-right\">\n        Created with <span tw=\"mr-1.5\">❤️</span> by David Malmström &copy;{' '}\n        {new Date().getFullYear()}\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import tw from 'twin.macro';\n\nexport const card = () => [\n  tw`rounded-lg p-3 shadow light:bg-white dark:bg-gray-700`,\n];\n\nexport const buttonPrimary = () => [\n  tw`rounded-lg py-2 px-3 \n    bg-red-600 text-white \n    hover:bg-red-500 \n    transition-all\n    shadow hover:shadow-lg\n    transform-gpu\n    translate-y-0\n    hover:-translate-y-px`,\n];\n\nexport const buttonSubtle = () => [\n  tw`rounded-lg py-0.5 px-1 \n    text-gray-500 dark:text-gray-400 \n    bg-gray-300 hover:bg-gray-200\n    dark:bg-gray-600 dark:hover:bg-gray-500 \n    transition-all\n    shadow hover:shadow-lg\n    transform-gpu\n    translate-y-0\n    hover:-translate-y-px`,\n];\n\nexport const h2Style = () => [tw`mb-3 text-xl font-bold`];\n\nexport const h3Style = () => [tw`mb-2 text-lg font-bold`];\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css, TwStyle } from 'twin.macro';\n\nexport interface StepperProps {\n  id: string;\n  twProps?: TwStyle;\n  label?: string;\n  max: number;\n  min: number;\n  onChange: (value: number) => void;\n  value: number;\n}\n\nexport function Stepper(props: StepperProps) {\n  const decrement = () => {\n    if (props.value > props.min) {\n      props.onChange(props.value - 1);\n    }\n  };\n\n  const increment = () => {\n    if (props.value < props.max) {\n      props.onChange(props.value + 1);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    props.onChange(parseInt(e, 10) || 0);\n  };\n\n  return (\n    <div css={props.twProps}>\n      {props.label && (\n        <label tw=\"block mb-1\" htmlFor={props.id}>\n          {props.label}\n        </label>\n      )}\n      <div tw=\"w-auto inline-flex\">\n        <button\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 dark:bg-gray-500 hover:dark:bg-gray-400 py-2 px-3 rounded-bl-md rounded-tl-md rounded-tr-none rounded-br-none transition-colors\"\n          type=\"button\"\n          onClick={decrement}\n          aria-controls={props.id}\n        >\n          –\n        </button>\n        <input\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 focus:bg-gray-200 dark:bg-gray-500 hover:dark:bg-gray-400 focus:dark:bg-gray-400 text-center appearance-none rounded-none transition-colors\"\n          css={{\n            '::-webkit-inner-spin-button': {\n              ' -webkit-appearance': 'none',\n              margin: '0',\n            },\n            '::-webkit-outer-spin-button': {\n              ' -webkit-appearance': 'none',\n              margin: '0',\n            },\n          }}\n          type=\"number\"\n          step=\"1\"\n          id={props.id}\n          value={props.value}\n          min={props.min}\n          max={props.max}\n          onChange={(e) => handleChange(e.target.value)}\n        />\n        <button\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 dark:bg-gray-500 hover:dark:bg-gray-400 py-2 px-3 rounded-br-md rounded-tr-md rounded-tl-none rounded-bl-none transition-colors\"\n          type=\"button\"\n          onClick={increment}\n          aria-controls={props.id}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css, TwStyle } from 'twin.macro';\nimport { h2Style, h3Style } from '../styles';\n\nexport interface HeadingProps {\n  h3?: boolean;\n}\n\nexport function Heading({\n  h3 = false,\n  children,\n}: React.PropsWithChildren<HeadingProps>) {\n  return h3 ? (\n    <h3 css={h3Style()}>{children}</h3>\n  ) : (\n    <h2 css={h2Style()}>{children}</h2>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\n\nimport { useState } from 'react';\nimport { Stepper } from '../components/stepper';\nimport { Heading } from '../components/heading';\n\nconst atLeast = (lowest: number) => (value: number) =>\n  value < lowest ? lowest : value;\n\nconst atLeastOne = atLeast(1);\n\nconst getSkillCost = (\n  initial: number,\n  target: number,\n  modifier: number = 0,\n  cost: number = 0\n): number =>\n  initial >= target\n    ? cost\n    : getSkillCost(\n        initial + 1,\n        target,\n        modifier,\n        cost + atLeastOne(initial + 1 + modifier)\n      );\n\nexport const Skills = () => {\n  const [current, setCurrent] = useState<number>(1);\n  const [target, setTarget] = useState<number>(2);\n  const [modifier, setModifier] = useState<number>(0);\n\n  const handleCurrentChange = (newCurrent: number) => {\n    setCurrent(newCurrent);\n    if (newCurrent >= target) {\n      setTarget(newCurrent + 1);\n    }\n  };\n\n  const handleTargetChange = (newTarget: number) => {\n    setTarget(newTarget);\n    if (newTarget <= current) {\n      setCurrent(newTarget - 1);\n    }\n  };\n\n  return (\n    <>\n      <Heading>Skill Calculator</Heading>\n      <div css={card}>\n        <div tw=\"grid grid-flow-col\">\n          <Stepper\n            twProps={tw`mb-4`}\n            id={'current'}\n            label={'Old Skill Value'}\n            min={1}\n            max={20}\n            value={current}\n            onChange={(value) => handleCurrentChange(value)}\n          ></Stepper>\n\n          <Stepper\n            twProps={tw`mb-4`}\n            id={'modifier'}\n            label={'Attribute Modifier'}\n            min={-4}\n            max={4}\n            value={modifier}\n            onChange={(value) => setModifier(value)}\n          ></Stepper>\n        </div>\n\n        <Stepper\n          twProps={tw`mb-12`}\n          id={'target'}\n          label={'New Skill Value'}\n          min={2}\n          max={20}\n          value={target}\n          onChange={(value) => handleTargetChange(value)}\n        ></Stepper>\n\n        <div tw=\"text-center\">Cost</div>\n        <div tw=\"text-9xl text-center\">\n          {getSkillCost(current, target, modifier)}\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\n\nexport interface SegmentedControlProps {\n  segments: string[];\n  onSegmentClick: (index: number) => void;\n  selectedIndex: number;\n  vertical?: boolean;\n}\n\nexport function SegmentedControl({\n  segments,\n  onSegmentClick,\n  selectedIndex,\n  vertical = false,\n}: SegmentedControlProps) {\n  return (\n    <div tw=\"p-1 bg-gray-300 dark:bg-gray-600 rounded-lg shadow-inner \">\n      <div\n        tw=\"relative grid gap-2\"\n        css={[\n          {\n            gridTemplateColumns: `repeat(${segments.length}, minmax(0, 1fr))`,\n          },\n          vertical && {\n            gridTemplateColumns: '1fr',\n            gridTemplateRows: `repeat(${segments.length}, minmax(0, 1fr))`,\n          },\n        ]}\n      >\n        {segments.map((s, index) => (\n          <button\n            key={index}\n            tw=\"px-2 py-1 text-sm z-10 rounded-lg relative after:bg-gray-400 after:dark:bg-gray-500\"\n            css={[\n              {\n                outline: 'none !important',\n                ':focus': {\n                  boxShadow: '0 0 4px 0 rgba(96, 165, 250, 1.1)',\n                },\n              },\n              css`\n                &:after {\n                  content: '';\n                  display: block;\n                  position: absolute;\n                  transition: all 300ms ease-in-out;\n                  opacity: ${index === selectedIndex ||\n                  index === selectedIndex - 1\n                    ? 0\n                    : 1};\n                }\n              `,\n              index !== segments.length - 1 &&\n                !vertical &&\n                css`\n                  &:after {\n                    right: -0.25rem;\n                    width: 1px;\n                    height: 1.5rem;\n                    top: 50%;\n                    transform: translateY(-50%);\n                  }\n                `,\n              index !== segments.length - 1 &&\n                vertical &&\n                css`\n                  &:after {\n                    left: 5%;\n                    width: 90%;\n                    height: 1px;\n                    bottom: -0.25rem;\n                    transform: translateY(-50%);\n                  }\n                `,\n            ]}\n            onClick={() => onSegmentClick(index)}\n          >\n            {s}\n          </button>\n        ))}\n        <div\n          tw=\"h-full z-0 absolute transition-transform shadow-md rounded-lg bg-white dark:bg-gray-500\"\n          style={{\n            height: `${vertical ? `1.75rem` : ``}`,\n            width: `${\n              vertical\n                ? '100%'\n                : `calc( (100% - ((${segments.length - 1} ) * 0.5rem)) / ${\n                    segments.length\n                  })`\n            }`,\n            transform: `${\n              vertical\n                ? `translateY(calc(${selectedIndex * 100}% + ${\n                    selectedIndex * 0.5\n                  }rem))`\n                : `translateX(calc(${selectedIndex * 100}% + ${\n                    selectedIndex * 0.5\n                  }rem))`\n            }`,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","export const rollDice = (min: number, max: number) => () =>\n  min + Math.floor(Math.random() * (max - min + 1));\n\nexport type ExplodingRange = 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\nexport const validExplodeRange = (value: number): value is ExplodingRange =>\n  value <= 10 && value >= 2;\n\nexport type DiceResults = {\n  sum: number;\n  rolls: number[];\n};\n\nexport const rollDiceWithRolls = (max: number) => (): DiceResults => {\n  const roll = rollDice(1, max)();\n  return {\n    sum: roll,\n    rolls: [roll],\n  };\n};\n\nexport const d2 = rollDiceWithRolls(2);\nexport const d3 = rollDiceWithRolls(3);\nexport const d5 = rollDiceWithRolls(5);\nexport const d10 = rollDiceWithRolls(10);\nexport const d20 = rollDiceWithRolls(20);\n\nconst exploding = (\n  ed: ExplodingRange = 10,\n  rolls: number[] = [],\n  sum: number = 0\n): DiceResults => {\n  const result = d10();\n  const newRolls = [...rolls, result.sum];\n  const newSum = sum + result.sum;\n\n  if (result.sum < ed) return { sum: newSum, rolls: newRolls };\n\n  return exploding(ed, newRolls, newSum);\n};\n\nexport const explodingD10 = (ed: ExplodingRange = 10) => exploding(ed);\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { Stepper } from '../components/stepper';\nimport { buttonPrimary, card, h3Style, buttonSubtle } from '../styles';\nimport {\n  d10,\n  d20,\n  d5,\n  DiceResults,\n  explodingD10,\n  validExplodeRange,\n} from '../utils/dice-roller';\nimport { Heading } from '../components/heading';\n\ninterface RollResult extends DiceResults {\n  modifier: number;\n}\n\ninterface RollHistoryItem {\n  roll: string;\n  result: string;\n}\n\nexport const Dice = () => {\n  const segments = ['d5', 'd10', 'd10 OR', 'd20'];\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n    setDiceResult(undefined);\n  };\n\n  const [modifier, setModifier] = useState(0);\n  const handleModifierChange = (value: number) => {\n    setModifier(value);\n    setDiceResult(undefined);\n  };\n\n  const [explodeOn, setExplodeOn] = useState(10);\n  const handleExplodeOn = (value: number) => {\n    setExplodeOn(value);\n    setDiceResult(undefined);\n  };\n\n  const [rollHistory, setRollHistory] = useState<RollHistoryItem[]>([]);\n  const clearRollHistory = () => setRollHistory([]);\n\n  const [diceResult, setDiceResult] = useState<RollResult | undefined>();\n\n  const getDieType = (die: string) => {\n    switch (die) {\n      case 'd5':\n        return d5;\n      case 'd10':\n        return d10;\n      case 'd10 OR':\n        return explodingD10;\n      case 'd20':\n      default:\n        return d20;\n    }\n  };\n\n  const displaySign = (num: number): string => {\n    return modifier > 0 ? `+ ${modifier}` : `– ${Math.abs(modifier)}`;\n  };\n\n  const getDieToRoll = (): string => {\n    const die = `1${segments[active]}`;\n\n    const or = `${\n      segments[active] === 'd10 OR'\n        ? explodeOn === 10\n          ? `(10)`\n          : `(${explodeOn}–10)`\n        : ''\n    }`;\n    const mod = `${modifier !== 0 ? displaySign(modifier) : ''}\n    `;\n    return [die, or, mod].join(' ');\n  };\n\n  const rollDie = () => {\n    const dieFn = getDieType(segments[active]);\n    const result = {\n      ...(segments[active] === 'd10 OR' && validExplodeRange(explodeOn)\n        ? dieFn(explodeOn)\n        : dieFn()),\n      modifier,\n    };\n    setDiceResult(result);\n    setRollHistory([\n      {\n        result: result.sum.toString(),\n        roll: getDieToRoll(),\n      },\n      ...rollHistory,\n    ]);\n  };\n\n  return (\n    <>\n      <Heading>Dice Roller</Heading>\n      <div tw=\"grid lg:grid-flow-col\" css={card}>\n        <div tw=\"\">\n          <div tw=\"mb-3\">\n            <SegmentedControl\n              segments={segments}\n              selectedIndex={active}\n              onSegmentClick={(index) => handleSegmentClick(index)}\n            ></SegmentedControl>\n          </div>\n          <div tw=\"grid grid-flow-col mb-12 auto-cols-fr\">\n            <Stepper\n              id={'diceModifier'}\n              label={'Modifier'}\n              min={-10}\n              max={10}\n              value={modifier}\n              onChange={(value) => handleModifierChange(value)}\n            ></Stepper>\n            {segments[active] === 'd10 OR' && (\n              <Stepper\n                id={'explodingModifier'}\n                label={'Explode on'}\n                min={2}\n                max={10}\n                value={explodeOn}\n                onChange={(value) => handleExplodeOn(value)}\n              ></Stepper>\n            )}\n          </div>\n          <div tw=\"flex justify-center mb-12\">\n            <button tw=\"\" css={buttonPrimary} onClick={rollDie}>\n              Roll {getDieToRoll()}\n            </button>\n          </div>\n        </div>\n        <div\n          tw=\"mb-12 text-9xl flex flex-col items-center justify-self-center\"\n          css={[\n            {\n              minHeight: '9rem',\n              minWidth: '3ch',\n              maxWidth: '3ch',\n            },\n          ]}\n        >\n          {diceResult && (\n            <>\n              <div tw=\"text-9xl text-center\">{diceResult.sum}</div>\n              <div tw=\"text-xs dark:text-gray-200 light:text-gray-500 text-center\">\n                {`Roll: ${diceResult.rolls.join(' + ')} ${\n                  modifier !== 0 ? displaySign(modifier) : ''\n                }`}\n              </div>\n            </>\n          )}\n        </div>\n        <div>\n          <div tw=\"flex items-center mb-1 justify-between\">\n            <h3 css={[h3Style(), tw`mb-0`]}>Roll History</h3>\n            <button css={[buttonSubtle()]} onClick={() => clearRollHistory()}>\n              Clear\n            </button>\n          </div>\n          <div tw=\"text-gray-500 dark:text-gray-300 p-3 rounded-lg bg-gray-100 dark:bg-gray-600 overflow-x-scroll h-96\">\n            {rollHistory &&\n              rollHistory.map((rh) => (\n                <div tw=\"mb-2\">\n                  <div>{rh.roll}</div>\n                  <div tw=\"font-bold\">{rh.result}</div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\n\nexport const Home = () => <div css={card}>Tools for Trudvang</div>;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\n\nimport { Heading } from '../components/heading';\n\nexport interface NameListProps {\n  heading: string;\n  names: string[];\n}\n\nexport const NameList = ({ heading = '', names = [] }: NameListProps) => {\n  return (\n    <>\n      <Heading h3={true}>{heading}</Heading>\n      {names.map((name, index) => (\n        <div tw=\"pb-1\" key={name + index}>\n          {name}\n        </div>\n      ))}\n    </>\n  );\n};\n","import { rollDice } from './dice-roller';\n\nexport const capitalize = (s: string) => s[0].toUpperCase() + s.slice(1);\n\nexport const choice = (names: string[]): string => {\n  const randomNumber = rollDice(0, names.length - 1)();\n  return names[randomNumber];\n};\n\nexport const range = (n: number) => Array.from({ length: n }, (_, key) => key);\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { buttonPrimary } from '../styles';\n\nimport peopleNames from '../data/people-names.json';\nimport { NameList } from './name-list';\nimport { capitalize, choice, range } from '../utils/utils';\n\nexport const NamesPeople = () => {\n  const segments = [\n    'Mittlander',\n    'Stormlander',\n    'Virann',\n    'Elf',\n    'Dwarf',\n    'Troll',\n  ];\n\n  const emptyNames = {\n    male: [],\n    female: [],\n    both: [],\n  };\n\n  const [nameResult, setNameResult] = useState({ ...emptyNames });\n\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n    setNameResult({ ...emptyNames });\n  };\n\n  type Suffix = {\n    [type in string]?: string[];\n  };\n\n  type Names = {\n    people: string;\n    prefix: string[];\n    suffix: Suffix;\n  };\n\n  const handleGenerateNameClick = () => {\n    const type = segments[active].toLowerCase();\n\n    const names: Names | undefined = peopleNames.find(\n      (pn) => pn.people === type\n    );\n\n    if (names) {\n      const generatedNames = Object.keys(names.suffix)\n        .filter((k) => names.suffix[k]?.length !== 0)\n        .map((k) => {\n          const suffixes = names.suffix[k];\n\n          return {\n            [k]:\n              suffixes !== undefined\n                ? range(10)\n                    .map((_) => `${choice(names.prefix)}${choice(suffixes)}`)\n                    .map(capitalize)\n                : [''],\n          };\n        })\n        .reduce((acc, cur) => ({ ...acc, ...cur }), {});\n\n      setNameResult(() => ({\n        ...emptyNames,\n        ...generatedNames,\n      }));\n    }\n  };\n\n  return (\n    <div tw=\"flex flex-col justify-center\">\n      <div tw=\"mb-12\">\n        <div tw=\"md:hidden\">\n          <SegmentedControl\n            vertical={true}\n            segments={segments}\n            selectedIndex={active}\n            onSegmentClick={(index) => handleSegmentClick(index)}\n          ></SegmentedControl>\n        </div>\n        <div tw=\"hidden md:block\">\n          <SegmentedControl\n            vertical={false}\n            segments={segments}\n            selectedIndex={active}\n            onSegmentClick={(index) => handleSegmentClick(index)}\n          ></SegmentedControl>\n        </div>\n      </div>\n      <div tw=\"flex justify-center mb-12\">\n        <button tw=\"mb-5\" css={buttonPrimary} onClick={handleGenerateNameClick}>\n          Generate names\n        </button>\n      </div>\n      <div\n        tw=\"grid gap-x-2\"\n        css={{\n          gridTemplateColumns: `repeat(${\n            Object.values(nameResult).filter((nr) => nr.length !== 0).length\n          }, minmax(0, 1fr))`,\n        }}\n      >\n        <div tw=\"text-center\">\n          {nameResult.male.length !== 0 && (\n            <NameList heading=\"Male\" names={nameResult.male}></NameList>\n          )}\n        </div>\n        <div tw=\"text-center\">\n          {nameResult.female.length !== 0 && (\n            <NameList heading=\"Female\" names={nameResult.female}></NameList>\n          )}\n        </div>\n        <div tw=\"text-center\">\n          {nameResult.both.length !== 0 && (\n            <NameList heading=\"Both\" names={nameResult.both}></NameList>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { buttonPrimary } from '../styles';\n\nimport { NameList } from './name-list';\nimport { capitalize, choice, range } from '../utils/utils';\n\ntype NameGeneratorResource = {\n  prefix: string[];\n  suffix: string[];\n};\n\ninterface GenericNameGeneratorProps {\n  json: NameGeneratorResource;\n  label: string;\n  maxNames?: number;\n}\n\nexport const GenericNameGenerator = ({\n  json,\n  label,\n  maxNames = 10,\n}: GenericNameGeneratorProps) => {\n  const [nameResult, setNameResult] = useState<string[]>([]);\n\n  const names: NameGeneratorResource = json;\n\n  const handleGenerateNameClick = () =>\n    setNameResult(\n      range(maxNames)\n        .map((_) => `${choice(names.prefix)}${choice(names.suffix)}`)\n        .map(capitalize)\n    );\n\n  return (\n    <div tw=\"flex flex-col justify-center\">\n      <div tw=\"flex justify-center\">\n        <button\n          tw=\"mb-5\"\n          css={buttonPrimary}\n          onClick={() => handleGenerateNameClick()}\n        >\n          Generate {label} names\n        </button>\n      </div>\n      <div tw=\"text-center\">\n        {nameResult.length !== 0 && (\n          <NameList heading={label} names={nameResult}></NameList>\n        )}\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport React, { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { card } from '../styles';\nimport { Heading } from '../components/heading';\nimport { NamesPeople } from '../components/names-people';\nimport { GenericNameGenerator } from '../components/generic-name-generator';\nimport innNames from '../data/inn-names.json';\nimport villageNames from '../data/village-names.json';\nimport plantNames from '../data/plant-names.json';\n\ntype NameGeneratorTypes = 'People' | 'Inns' | 'Villages' | 'Plants';\n\ninterface NameGenerator {\n  label: NameGeneratorTypes;\n  component: React.FC;\n}\n\nconst nameGenerators: NameGenerator[] = [\n  {\n    label: 'People',\n    component: NamesPeople,\n  },\n  {\n    label: 'Inns',\n    component: Heading,\n  },\n  {\n    label: 'Villages',\n    component: NamesPeople,\n  },\n  {\n    label: 'Plants',\n    component: NamesPeople,\n  },\n];\n\nexport const Names = () => {\n  const segments: NameGeneratorTypes[] = nameGenerators.map((ng) => ng.label);\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n  };\n\n  return (\n    <>\n      <Heading>Name Generators</Heading>\n      <div tw=\"mb-5\">\n        <SegmentedControl\n          segments={segments}\n          selectedIndex={active}\n          onSegmentClick={(index) => handleSegmentClick(index)}\n        ></SegmentedControl>\n      </div>\n      <div css={card} tw=\"flex flex-col justify-center px-3\">\n        {(() => {\n          switch (nameGenerators[active].label) {\n            case 'People':\n              return <NamesPeople></NamesPeople>;\n            case 'Inns':\n              return (\n                // TODO: Fix state\n                <div key=\"inn\">\n                  <GenericNameGenerator\n                    json={innNames}\n                    label={'Inn'}\n                  ></GenericNameGenerator>\n                </div>\n              );\n            case 'Villages':\n              return (\n                // TODO: Fix state\n                <div key=\"village\">\n                  <GenericNameGenerator\n                    json={villageNames}\n                    label={'Village'}\n                  ></GenericNameGenerator>\n                </div>\n              );\n            case 'Plants':\n              return (\n                // TODO: Fix state\n                <div key=\"plant\">\n                  <GenericNameGenerator\n                    json={plantNames}\n                    label={'Plant'}\n                  ></GenericNameGenerator>\n                </div>\n              );\n            default:\n              return <NamesPeople></NamesPeople>;\n          }\n        })()}\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\nimport { Heading } from '../components/heading';\n\nexport const Changelog = () => {\n  return (\n    <div tw=\"max-w-prose\">\n      <Heading>Changelog</Heading>\n      <p tw=\"mb-5\">Changes and improvements to Grymslante.</p>\n      <div css={card}>\n        <div tw=\"mb-8\">\n          <Heading h3={true}>Added Plants, Villages and Inns</Heading>\n          <p tw=\"mb-2\">\n            Now you can generate names of beer heavy inns, plants from another\n            world and cozy villages.\n          </p>\n        </div>\n\n        <div tw=\"mb-8\">\n          <Heading h3={true}>Fixed colors and Changelog</Heading>\n          <p tw=\"mb-2\">\n            I managed to forget the light theme for the Dice Roller. Darkened\n            the light theme background to make the cards stand out a bit more.\n            Then darkened the footer and removed the top bar background. Added a\n            light theme to the Dice Roller page and tweaked the dark theme.\n            Limited the Changelog to 65 characters for improved readability.\n          </p>\n        </div>\n\n        <div tw=\"mb-8\">\n          <Heading h3={true}>Improve Dice Roller</Heading>\n          <p tw=\"mb-2\">I felt that the Dice Roller was a bit lackluster.</p>\n\n          <ul tw=\"list-disc list-inside pl-2\">\n            <li>Added a section displaying a history of all Dice Rolls.</li>\n            <li>Improved how the Dice Roller page looks on larger screens.</li>\n            <li>\n              Improved how the dice to roll on the Roll-button is displayed.\n            </li>\n            <li>Refactored the Dice Rolling to accommodate the Roll History</li>\n          </ul>\n        </div>\n\n        <div tw=\"mb-0\">\n          <Heading h3={true}>Initial release</Heading>\n          <p>\n            Released with a Skill Calculator, Dice Roller and Name Generator.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Footer from './components/footer';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Skills } from './pages/skills';\nimport { Dice } from './pages/dice';\nimport { Home } from './pages/home';\nimport { Names } from './pages/names';\nimport { Changelog } from './pages/changelog';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(true);\n\n  useEffect(() => {\n    document.title = 'Grymslante';\n  }, []);\n\n  return (\n    <Router basename=\"/grymslante\">\n      <div className={`app ${darkMode ? 'dark' : 'light'}`}>\n        <div tw=\"flex flex-col min-h-screen transition-colors light:bg-gray-100 dark:bg-gray-900 dark:text-gray-50\">\n          <div tw=\"pb-4 flex-auto flex-shrink-0\">\n            <div tw=\"p-1 px-3 mb-3  flex justify-end\">\n              <button\n                tw=\"py-1 px-2 rounded bg-gray-300 dark:bg-gray-700 text-xs\"\n                onClick={() => setDarkMode(!darkMode)}\n              >\n                {darkMode ? 'Back to the Light' : 'Embrace the Darkness'}\n              </button>\n            </div>\n            <h1 tw=\"px-3 text-2xl mb-3 font-bold text-gray-400 dark:text-gray-400 \">\n              Grymslante\n            </h1>\n\n            <Navbar />\n            <div tw=\"px-3 container mx-auto\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/skills\">\n                  <Skills />\n                </Route>\n                <Route path=\"/dice\">\n                  <Dice />\n                </Route>\n                <Route path=\"/names\">\n                  <Names />\n                </Route>\n                <Route path=\"/changelog\">\n                  <Changelog />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n          <Footer></Footer>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyles } from 'twin.macro';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}