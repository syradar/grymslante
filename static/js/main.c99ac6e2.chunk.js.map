{"version":3,"sources":["components/navbar.tsx","components/footer.tsx","styles.ts","components/stepper.tsx","components/heading.tsx","pages/skills.tsx","components/segmented-control.tsx","utils/dice-roller.ts","pages/dice.tsx","pages/home.tsx","pages/names.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","css","to","Footer","href","Date","getFullYear","card","buttonPrimary","Stepper","props","twProps","label","htmlFor","id","type","onClick","value","min","onChange","aria-controls","margin","step","max","e","parseInt","handleChange","target","h2Style","h3Style","Heading","h3","children","lowest","atLeastOne","getSkillCost","initial","modifier","cost","Skills","useState","current","setCurrent","setTarget","setModifier","newCurrent","newTarget","SegmentedControl","segments","onSegmentClick","selectedIndex","vertical","gridTemplateColumns","length","gridTemplateRows","map","s","index","outline","boxShadow","style","height","width","transform","rollDice","Math","floor","random","d5","d10","d20","exploding","ed","sum","result","newSum","explodingD10","Dice","active","setActive","explodeOn","setExplodeOn","diceResult","setDiceResult","undefined","handleSegmentClick","handleModifierChange","handleExplodeOn","dieFn","die","getDieType","Home","Names","emptyNames","male","female","both","nameResult","setNameResult","choice","names","capitalize","toUpperCase","slice","toLowerCase","peopleNames","find","pn","people","generatedNames","Object","keys","suffix","filter","k","n","suffixes","Array","from","_","key","prefix","a","console","log","reduce","acc","cur","values","nr","name","App","darkMode","setDarkMode","useEffect","document","title","basename","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c99ac6e2.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav tw=\"mb-5 bg-gray-200 dark:bg-gray-700\">\n    <ul tw=\"grid grid-flow-col gap-x-3\">\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/\"\n        >\n          Home\n        </Link>\n      </li>\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/skills\"\n        >\n          <span tw=\"\">Skills</span>\n          <span tw=\"flex items-center ml-1 p-0.5 bg-gray-300 dark:bg-gray-600 text-xs leading-none font-bold rounded text-gray-400\">\n            DODT\n          </span>\n        </Link>\n      </li>\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/dice\"\n        >\n          Dice\n        </Link>\n      </li>\n      <li tw=\"\">\n        <Link\n          css={tw`flex justify-center items-center text-center py-3 px-2 hover:bg-red-500 hover:text-white hover:transition-colors`}\n          to=\"/names\"\n        >\n          Names\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navbar;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React from 'react';\n\nconst Footer = () => (\n  <footer tw=\"py-4 px-3 bg-gray-100 dark:bg-gray-800 grid grid-flow-col flex-shrink-0 text-sm dark:text-gray-400\">\n    <a\n      tw=\"text-red-500 hover:text-red-400 hover:underline\"\n      href=\"https://github.com/syradar/grymslante\"\n    >\n      GitHub\n    </a>\n    <div tw=\"text-right\">\n      Created with <span tw=\"mr-1.5\">❤️</span> by David Malmström &copy;{' '}\n      {new Date().getFullYear()}\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import tw from \"twin.macro\";\n\nexport const card = () => [\n    tw`rounded-lg p-3 shadow light:bg-white dark:bg-gray-700`\n]\n\nexport const buttonPrimary = () => [\n    tw`rounded-lg py-2 px-3 \n    bg-red-600 text-white \n    hover:bg-red-500 \n    transition-all\n    shadow hover:shadow-lg\n    transform-gpu\n    translate-y-0\n    hover:-translate-y-px`\n]\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css, TwStyle } from 'twin.macro';\n\nexport interface StepperProps {\n  id: string;\n  twProps?: TwStyle;\n  label?: string;\n  max: number;\n  min: number;\n  onChange: (value: number) => void;\n  value: number;\n}\n\nexport function Stepper(props: StepperProps) {\n  const decrement = () => {\n    if (props.value > props.min) {\n      props.onChange(props.value - 1);\n    }\n  };\n\n  const increment = () => {\n    if (props.value < props.max) {\n      props.onChange(props.value + 1);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    props.onChange(parseInt(e, 10) || 0);\n  };\n\n  return (\n    <div css={props.twProps}>\n      {props.label && (\n        <label tw=\"block mb-1\" htmlFor={props.id}>\n          {props.label}\n        </label>\n      )}\n      <div tw=\"w-auto inline-flex\">\n        <button\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 dark:bg-gray-500 hover:dark:bg-gray-400 py-2 px-3 rounded-bl-md rounded-tl-md rounded-tr-none rounded-br-none transition-colors\"\n          type=\"button\"\n          onClick={decrement}\n          aria-controls={props.id}\n        >\n          –\n        </button>\n        <input\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 focus:bg-gray-200 dark:bg-gray-500 hover:dark:bg-gray-400 focus:dark:bg-gray-400 text-center appearance-none rounded-none transition-colors\"\n          css={{\n            '::-webkit-inner-spin-button': {\n              ' -webkit-appearance': 'none',\n              margin: '0',\n            },\n            '::-webkit-outer-spin-button': {\n              ' -webkit-appearance': 'none',\n              margin: '0',\n            },\n          }}\n          type=\"number\"\n          step=\"1\"\n          id={props.id}\n          value={props.value}\n          min={props.min}\n          max={props.max}\n          onChange={(e) => handleChange(e.target.value)}\n        />\n        <button\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 dark:bg-gray-500 hover:dark:bg-gray-400 py-2 px-3 rounded-br-md rounded-tr-md rounded-tl-none rounded-bl-none transition-colors\"\n          type=\"button\"\n          onClick={increment}\n          aria-controls={props.id}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css, TwStyle } from 'twin.macro';\n\nexport interface HeadingProps {\n  h3?: boolean;\n}\n\nconst h2Style = () => [tw`mb-3 text-xl font-bold`];\n\nconst h3Style = () => [tw`mb-2 text-lg font-bold`];\n\nexport function Heading({\n  h3 = false,\n  children,\n}: React.PropsWithChildren<HeadingProps>) {\n  return h3 ? (\n    <h3 css={h3Style}>{children}</h3>\n  ) : (\n    <h2 css={h2Style}>{children}</h2>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\n\nimport { useState } from 'react';\nimport { Stepper } from '../components/stepper';\nimport { Heading } from '../components/heading';\n\nconst atLeast = (lowest: number) => (value: number) =>\n  value < lowest ? lowest : value;\n\nconst atLeastOne = atLeast(1);\n\nconst getSkillCost = (\n  initial: number,\n  target: number,\n  modifier: number = 0,\n  cost: number = 0\n): number =>\n  initial >= target\n    ? cost\n    : getSkillCost(\n        initial + 1,\n        target,\n        modifier,\n        cost + atLeastOne(initial + 1 + modifier)\n      );\n\nexport const Skills = () => {\n  const [current, setCurrent] = useState<number>(1);\n  const [target, setTarget] = useState<number>(2);\n  const [modifier, setModifier] = useState<number>(0);\n\n  const handleCurrentChange = (newCurrent: number) => {\n    setCurrent(newCurrent);\n    if (newCurrent >= target) {\n      setTarget(newCurrent + 1);\n    }\n  };\n\n  const handleTargetChange = (newTarget: number) => {\n    setTarget(newTarget);\n    if (newTarget <= current) {\n      setCurrent(newTarget - 1);\n    }\n  };\n\n  return (\n    <>\n      <Heading>Skill Calculator</Heading>\n      <div css={card}>\n        <div tw=\"grid grid-flow-col\">\n          <Stepper\n            twProps={tw`mb-4`}\n            id={'current'}\n            label={'Old Skill Value'}\n            min={1}\n            max={20}\n            value={current}\n            onChange={(value) => handleCurrentChange(value)}\n          ></Stepper>\n\n          <Stepper\n            twProps={tw`mb-4`}\n            id={'modifier'}\n            label={'Attribute Modifier'}\n            min={-4}\n            max={4}\n            value={modifier}\n            onChange={(value) => setModifier(value)}\n          ></Stepper>\n        </div>\n\n        <Stepper\n          twProps={tw`mb-12`}\n          id={'target'}\n          label={'New Skill Value'}\n          min={2}\n          max={20}\n          value={target}\n          onChange={(value) => handleTargetChange(value)}\n        ></Stepper>\n\n        <div tw=\"text-center\">Cost</div>\n        <div tw=\"text-9xl text-center\">\n          {getSkillCost(current, target, modifier)}\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\n\nexport interface SegmentedControlProps {\n  segments: string[];\n  onSegmentClick: (index: number) => void;\n  selectedIndex: number;\n  vertical?: boolean;\n}\n\nexport function SegmentedControl({\n  segments,\n  onSegmentClick,\n  selectedIndex,\n  vertical = false,\n}: SegmentedControlProps) {\n  return (\n    <div tw=\"p-1 bg-gray-300 dark:bg-gray-600 rounded-lg shadow-inner \">\n      <div\n        tw=\"relative grid gap-2\"\n        css={[\n          {\n            gridTemplateColumns: `repeat(${segments.length}, minmax(0, 1fr))`,\n          },\n          vertical && {\n            gridTemplateColumns: '1fr',\n            gridTemplateRows: `repeat(${segments.length}, minmax(0, 1fr))`,\n          },\n        ]}\n      >\n        {segments.map((s, index) => (\n          <button\n            key={index}\n            tw=\"px-2 py-1 text-sm z-10 rounded-lg relative after:bg-gray-400 after:dark:bg-gray-500\"\n            css={[\n              {\n                outline: 'none !important',\n                ':focus': {\n                  boxShadow: '0 0 4px 0 rgba(96, 165, 250, 1.1)',\n                },\n              },\n              css`\n                &:after {\n                  content: '';\n                  display: block;\n                  position: absolute;\n                  transition: all 300ms ease-in-out;\n                  opacity: ${index === selectedIndex ||\n                  index === selectedIndex - 1\n                    ? 0\n                    : 1};\n                }\n              `,\n              index !== segments.length - 1 &&\n                !vertical &&\n                css`\n                  &:after {\n                    right: -0.25rem;\n                    width: 1px;\n                    height: 1.5rem;\n                    top: 50%;\n                    transform: translateY(-50%);\n                  }\n                `,\n              index !== segments.length - 1 &&\n                vertical &&\n                css`\n                  &:after {\n                    left: 5%;\n                    width: 90%;\n                    height: 1px;\n                    bottom: -0.25rem;\n                    transform: translateY(-50%);\n                  }\n                `,\n            ]}\n            onClick={() => onSegmentClick(index)}\n          >\n            {s}\n          </button>\n        ))}\n        <div\n          tw=\"h-full z-0 absolute transition-transform shadow-md rounded-lg bg-white dark:bg-gray-500\"\n          style={{\n            height: `${vertical ? `1.75rem` : ``}`,\n            width: `${\n              vertical\n                ? '100%'\n                : `calc( (100% - ((${segments.length - 1} ) * 0.5rem)) / ${\n                    segments.length\n                  })`\n            }`,\n            transform: `${\n              vertical\n                ? `translateY(calc(${selectedIndex * 100}% + ${\n                    selectedIndex * 0.5\n                  }rem))`\n                : `translateX(calc(${selectedIndex * 100}% + ${\n                    selectedIndex * 0.5\n                  }rem))`\n            }`,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","export const rollDice = (min: number, max: number) => () =>\n  min + Math.floor(Math.random() * (max - min + 1));\n\nexport const d2 = rollDice(1, 2);\nexport const d3 = rollDice(1, 3);\nexport const d5 = rollDice(1, 5);\nexport const d10 = rollDice(1, 10);\nexport const d20 = rollDice(1, 20);\n\nexport type ExplodingRange = 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\nexport const validExplodeRange = (value: number): value is ExplodingRange => value <= 10 && value >= 2;\n\nconst exploding = (ed: ExplodingRange = 10, sum: number = 0): number => {\n  const result = d10();\n  const newSum = sum + result;\n\n  if (result < ed) return newSum;\n\n  return exploding(ed, newSum);\n};\n\nexport const explodingD10 = (ed: ExplodingRange = 10) =>\n  exploding(ed);","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { Stepper } from '../components/stepper';\nimport { buttonPrimary, card } from '../styles';\nimport {\n  d10,\n  d20,\n  d5,\n  explodingD10,\n  validExplodeRange,\n} from '../utils/dice-roller';\nimport { Heading } from '../components/heading';\n\nexport const Dice = () => {\n  const segments = ['d5', 'd10', 'd10 OR', 'd20'];\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n    setDiceResult(undefined);\n  };\n\n  const [modifier, setModifier] = useState(0);\n  const handleModifierChange = (value: number) => {\n    setModifier(value);\n    setDiceResult(undefined);\n  };\n\n  const [explodeOn, setExplodeOn] = useState(10);\n  const handleExplodeOn = (value: number) => {\n    setExplodeOn(value);\n    setDiceResult(undefined);\n  };\n\n  const [diceResult, setDiceResult] = useState<number>();\n\n  const getDieType = (die: string) => {\n    switch (die) {\n      case 'd5':\n        return d5;\n      case 'd10':\n        return d10;\n      case 'd10 OR':\n        return explodingD10;\n      case 'd20':\n      default:\n        return d20;\n    }\n  };\n\n  const rollDie = () => {\n    const dieFn = getDieType(segments[active]);\n    const result =\n      segments[active] === 'd10 OR' && validExplodeRange(explodeOn)\n        ? dieFn(explodeOn) + modifier\n        : dieFn() + modifier;\n    setDiceResult(() => result);\n  };\n\n  return (\n    <>\n      <Heading>Dice Roller</Heading>\n      <div tw=\"flex flex-col justify-center\" css={card}>\n        <div tw=\"mb-3\">\n          <SegmentedControl\n            segments={segments}\n            selectedIndex={active}\n            onSegmentClick={(index) => handleSegmentClick(index)}\n          ></SegmentedControl>\n        </div>\n        <div tw=\"grid grid-flow-col mb-5\">\n          <Stepper\n            id={'diceModifier'}\n            label={'Modifier'}\n            min={-10}\n            max={10}\n            value={modifier}\n            onChange={(value) => handleModifierChange(value)}\n          ></Stepper>\n          {segments[active] === 'd10 OR' && (\n            <Stepper\n              id={'explodingModifier'}\n              label={'Explode on'}\n              min={2}\n              max={10}\n              value={explodeOn}\n              onChange={(value) => handleExplodeOn(value)}\n            ></Stepper>\n          )}\n        </div>\n        <div tw=\"flex justify-center mb-12\">\n          <button tw=\"\" css={buttonPrimary} onClick={rollDie}>\n            Roll 1{segments[active]}\n            {segments[active] === 'd10 OR' && (\n              <span> ({explodeOn === 10 ? `10` : `${explodeOn}–10`})</span>\n            )}\n            {modifier !== 0 && (\n              <span>\n                {modifier > 0 ? ' +' : ' '}\n                {modifier}\n              </span>\n            )}\n          </button>\n        </div>\n        {diceResult && (\n          <>\n            <div tw=\"text-9xl text-center\">{diceResult}</div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\n\nexport const Home = () => <div css={card}>Tools for Trudvang</div>;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { buttonPrimary, card } from '../styles';\n\nimport { Heading } from '../components/heading';\n\nimport peopleNames from '../data/people-names.json';\nimport { rollDice } from '../utils/dice-roller';\n\nexport const Names = () => {\n  const segments = [\n    'Mittlander',\n    'Stormlander',\n    'Virann',\n    'Elf',\n    'Dwarf',\n    'Troll',\n  ];\n\n  const emptyNames = {\n    male: [],\n    female: [],\n    both: [],\n  };\n\n  const [nameResult, setNameResult] = useState({ ...emptyNames });\n\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n    setNameResult({ ...emptyNames });\n  };\n\n  const choice = (names: string[]): string => {\n    const randomNumber = rollDice(0, names.length - 1)();\n    return names[randomNumber];\n  };\n\n  const range = (n: number) => Array.from({ length: n }, (_, key) => key);\n\n  type Suffix = {\n    [type in string]?: string[];\n  };\n\n  type Names = {\n    people: string;\n    prefix: string[];\n    suffix: Suffix;\n  };\n\n  const capitalize = (s: string) => s[0].toUpperCase() + s.slice(1);\n\n  const handleGenerateNameClick = () => {\n    const type = segments[active].toLowerCase();\n\n    const names: Names | undefined = peopleNames.find(\n      (pn) => pn.people === type\n    );\n\n    if (names) {\n      const generatedNames = Object.keys(names.suffix)\n        .filter((k) => names.suffix[k]?.length !== 0)\n        .map((k) => {\n          const suffixes = names.suffix[k];\n\n          return {\n            [k]:\n              suffixes !== undefined\n                ? range(10).map(\n                    (_) => `${choice(names.prefix)}${choice(suffixes)}`\n                  )\n                : [''],\n          };\n        })\n        .map((a) => {\n          console.log(a);\n          return a;\n        })\n        .reduce((acc, cur) => ({ ...acc, ...cur }), {});\n\n      setNameResult(() => ({\n        ...emptyNames,\n        ...generatedNames,\n      }));\n    }\n  };\n\n  return (\n    <>\n      <Heading>Name Generator</Heading>\n      <div css={card} tw=\"flex flex-col justify-center px-3\">\n        <div tw=\"mb-12\">\n          <div tw=\"md:hidden\">\n            <SegmentedControl\n              vertical={true}\n              segments={segments}\n              selectedIndex={active}\n              onSegmentClick={(index) => handleSegmentClick(index)}\n            ></SegmentedControl>\n          </div>\n          <div tw=\"hidden md:block\">\n            <SegmentedControl\n              vertical={false}\n              segments={segments}\n              selectedIndex={active}\n              onSegmentClick={(index) => handleSegmentClick(index)}\n            ></SegmentedControl>\n          </div>\n        </div>\n        <div tw=\"flex justify-center mb-12\">\n          <button\n            tw=\"mb-5\"\n            css={buttonPrimary}\n            onClick={handleGenerateNameClick}\n          >\n            Generate names\n          </button>\n        </div>\n        <div\n          tw=\"grid gap-x-2\"\n          css={{\n            gridTemplateColumns: `repeat(${\n              Object.values(nameResult).filter((nr) => nr.length !== 0).length\n            }, minmax(0, 1fr))`,\n          }}\n        >\n          <div tw=\"text-center\">\n            {nameResult.male.length !== 0 && <Heading h3={true}>Male</Heading>}\n            {nameResult.male.length !== 0 &&\n              nameResult.male.map((name, index) => (\n                <div tw=\"pb-1\" key={name + index}>\n                  {capitalize(name)}\n                </div>\n              ))}\n          </div>\n          <div tw=\"text-center\">\n            {nameResult.female.length !== 0 && (\n              <Heading h3={true}>Female</Heading>\n            )}\n            {nameResult.female.length !== 0 &&\n              nameResult.female.map((name, index) => (\n                <div tw=\"pb-1\" key={name + index}>\n                  {capitalize(name)}\n                </div>\n              ))}\n          </div>\n          <div tw=\"text-center\">\n            {nameResult.both.length !== 0 && <Heading h3={true}>Both</Heading>}\n            {nameResult.both.length !== 0 &&\n              nameResult.both.map((name, index) => (\n                <div tw=\"pb-1\" key={name + index}>\n                  {capitalize(name)}\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Footer from './components/footer';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Skills } from './pages/skills';\nimport { Dice } from './pages/dice';\nimport { Home } from './pages/home';\nimport { Names } from './pages/names';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(true);\n\n  useEffect(() => {\n    document.title = 'Grymslante';\n  }, []);\n\n  return (\n    <Router basename=\"/grymslante\">\n      <div className={`app ${darkMode ? 'dark' : 'light'}`}>\n        <div tw=\"flex flex-col min-h-screen transition-colors light:bg-gray-50 dark:bg-gray-900 dark:text-gray-50\">\n          <div tw=\"pb-4 flex-auto flex-shrink-0\">\n            <div tw=\"p-1 px-3 mb-3 bg-gray-100 dark:bg-gray-800 flex justify-end\">\n              <button\n                tw=\"py-1 px-2 rounded bg-gray-200 dark:bg-gray-700 text-xs\"\n                onClick={() => setDarkMode(!darkMode)}\n              >\n                {darkMode ? 'Back to the Light' : 'Embrace the Darkness'}\n              </button>\n            </div>\n            <h1 tw=\"px-3 text-2xl mb-3 font-bold text-gray-400 dark:text-gray-400 \">\n              Grymslante\n            </h1>\n\n            <Navbar />\n            <div tw=\"px-3 container mx-auto\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/skills\">\n                  <Skills />\n                </Route>\n                <Route path=\"/dice\">\n                  <Dice />\n                </Route>\n                <Route path=\"/names\">\n                  <Names />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n          <Footer></Footer>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyles } from 'twin.macro';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}