{"version":3,"sources":["components/navbar.tsx","components/footer.tsx","styles.ts","components/stepper.tsx","components/heading.tsx","pages/skills.tsx","components/segmented-control.tsx","utils/dice-roller.ts","pages/dice.tsx","components/name-list.tsx","utils/utils.ts","components/names-people.tsx","components/generic-name-generator.tsx","pages/names.tsx","pages/changelog.tsx","utils/items/items-functions.ts","components/item-card.tsx","pages/items.tsx","utils/travel/travel.ts","components/theme-switcher.tsx","components/language-switcher.tsx","components/travel-button.tsx","pages/travel.tsx","pages/credits.tsx","App.tsx","services/dark-mode.service.ts","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["Navbar","t","useTranslation","label","path","chip","map","p","css","to","activeStyle","Footer","href","Date","getFullYear","card","buttonPrimary","filterButtonStyle","active","Stepper","value","id","twProps","max","min","onChange","handleChange","e","parseInt","htmlFor","type","onClick","aria-controls","margin","step","target","Heading","h3","children","lowest","atLeastOne","getSkillCost","initial","modifier","cost","Skills","useState","current","setCurrent","setTarget","setModifier","newCurrent","newTarget","SegmentedControl","segments","onSegmentClick","selectedIndex","vertical","gridTemplateColumns","length","gridTemplateRows","s","index","outline","boxShadow","style","height","width","transform","rollDice","Math","floor","random","rollDiceWithRolls","roll","sum","rolls","d5","d10","d20","exploding","ed","result","newRolls","newSum","explodingD10","Dice","d","setActive","explodeOn","setExplodeOn","rollHistory","setRollHistory","diceResult","setDiceResult","displaySign","num","abs","getDieToRoll","join","undefined","handleSegmentClick","handleModifierChange","handleExplodeOn","dieFn","die","getDieType","toString","minHeight","minWidth","maxWidth","rh","shortid","generate","NameList","heading","names","name","capitalize","toUpperCase","slice","toLowerCase","choice","range","n","Array","from","_","key","NamesPeople","seg","emptyNames","male","female","all","nameResult","setNameResult","peopleNames","find","pn","people","generatedNames","Object","keys","suffix","filter","k","suffixes","prefix","reduce","acc","cur","values","nr","GenericNameGenerator","json","buttonText","maxNames","i18n","words","language","Names","nameGenerators","ng","villageNames","villageNamesSv","villageNamesEn","innNamesSv","plantNamesSv","Changelog","className","rel","tradeValueToCoinPurse","tv","gold","silver","copper","coinsOrEmptyArray","x","c","tvToFormattedCoins","coinLabels","compose","gc","sc","cc","formatCoinPurse","ItemCard","tradeValue","special","weightInKg","cardId","TransportSpeed","TravelSpeed","Landscape","Terrain","Passability","Weather","Items","items","itemDataSv","uniqueFilterButtons","is","uniq","pluck","filters","results","searchQuery","sorting","ascending","itemList","setItemList","itemNameFilter","query","i","includes","onlyFilterByTypeFunctionIfOneActive","filterButtons","itms","every","fb","filterItemsByType","newFilterButtons","fbs","updateFilterButtons","tableCellStyle","inputRef","useRef","useEffect","focus","ref","item","some","ThemeSwitcher","theme","toggleTheme","LanguageSwitcher","changeLanguage","lng","disabled","transportSpeeds","Foot","Wagon","Horse","Boat","travelSpeeds","WalkInShadows","Slow","Normal","Fast","Quick","landscapes","Plains","LightlyHilly","Hilly","Mountainous","terrains","Road","Grass","GrassHigh","Forest","ForestThick","CityEmpty","CityNormal","CityCrowd","VillageEmpty","VillageNormal","VillageCrowd","passabilities","SomewhatDifficult","Difficult","VeryDifficult","ExtremelyDifficult","weathers","Rain","HeavyRain","Snowing","Blizzard","SnowLittle","Snow","SnowMuch","getTravelTime","travelTimePerDay","transportSpeed","travelSpeed","landscape","terrain","passability","weather","distanceInKm","timeInHours","hours","travelDays","TravelButton","travel","translationNameSpace","te","Travel","getDefaultTravelCalculationOptions","setTravel","updateTravel","options","formatNumber","round","Number","EPSILON","count","Credits","App","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","localTheme","getItem","matchMedia","matches","useDarkMode","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18nReact","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","supportedLngs","ns","backend","loadPath","interpolation","escapeValue","ReactDOM","render","StrictMode","I18nextProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.e450d016.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport React from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\ninterface NavbarItem {\n  label: string;\n  path: string;\n  chip?: string;\n}\n\nexport const Navbar = () => {\n  const { t } = useTranslation('core');\n\n  const pages: NavbarItem[] = [\n    {\n      label: 'Names',\n      path: '/names',\n    },\n    {\n      label: 'Items',\n      path: '/items',\n    },\n    {\n      label: 'Skills',\n      path: '/skills',\n      chip: 'DODT',\n    },\n    {\n      label: 'Dice',\n      path: '/dice',\n    },\n    {\n      label: 'Travel',\n      path: '/travel',\n    },\n  ];\n\n  return (\n    <nav tw=\"mb-12 bg-gray-300 dark:bg-gray-700 flex justify-center\">\n      <ul tw=\"grid grid-flow-col gap-x-3 container overflow-x-scroll\">\n        {pages.map((p) => (\n          <li key={p.path}>\n            <NavLink\n              css={[\n                tw`flex flex-col h-full justify-center items-center text-center \n                py-3 px-2 hover:bg-gray-400 dark:bg-gray-700 border-b-2 border-gray-300 dark:border-gray-700`,\n              ]}\n              to={p.path}\n              activeStyle={tw`font-bold border-red-500`}\n            >\n              <span>{t(p.label)}</span>\n              {p.chip && (\n                <span tw=\"flex items-center ml-1 py-0.5 px-1 bg-gray-300 dark:bg-gray-600 text-xs font-bold rounded text-gray-400\">\n                  {t(p.chip)}\n                </span>\n              )}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nexport const Footer = () => {\n  const { t } = useTranslation('core');\n\n  return (\n    <footer\n      tw=\"py-4 px-3 \n  flex flex-col\n  bg-gray-200 dark:bg-gray-800 text-sm dark:text-gray-400\"\n    >\n      <div tw=\"flex flex-wrap mb-3\">\n        <div tw=\"mr-8\">\n          <Link\n            css={tw`text-red-500 hover:text-red-400 hover:underline`}\n            to=\"/changelog\"\n          >\n            {t('Changelog')}\n          </Link>\n        </div>\n        <div tw=\"mr-8\">\n          <Link\n            css={tw`text-red-500 hover:text-red-400 hover:underline`}\n            to=\"/credits\"\n          >\n            {t('Credits')}\n          </Link>\n        </div>\n        <a\n          tw=\"text-red-500 hover:text-red-400 hover:underline\"\n          href=\"https://github.com/syradar/grymslante\"\n        >\n          GitHub\n        </a>\n      </div>\n\n      <div>\n        {t('Created with')} <span tw=\"mr-1.5\">❤️</span> {t('by')} David\n        Malmström &copy; {new Date().getFullYear()}\n      </div>\n    </footer>\n  );\n};\n","import tw from 'twin.macro';\n\nexport const card = () => [\n  tw`rounded-lg p-3 shadow light:bg-white dark:bg-gray-800`,\n];\n\nexport const buttonPrimary = () => [\n  tw`rounded-lg py-2 px-3 \n    bg-red-600 text-white \n    hover:bg-red-500 \n    transition-all\n    shadow hover:shadow-lg\n    transform-gpu\n    translate-y-0\n    hover:-translate-y-px`,\n];\n\nexport const buttonSubtle = () => [\n  tw`rounded-lg py-0.5 px-1 \n    text-gray-500 dark:text-gray-400 \n    bg-gray-300 hover:bg-gray-200\n    dark:bg-gray-600 dark:hover:bg-gray-500 \n    transition-all\n    shadow hover:shadow-lg\n    transform-gpu\n    translate-y-0\n    hover:-translate-y-px`,\n];\n\nexport const filterButtonStyle = (active: boolean = false) => [\n  tw`rounded-lg py-1 px-2 \n  font-medium\n    text-gray-600 dark:text-gray-300 \n    border border-gray-600 dark:border-gray-300\n     text-sm break-all`,\n  active &&\n    tw`text-red-500 dark:text-red-500 \n    border-red-500 dark:border-red-500`,\n];\n\nexport const h2Style = () => [tw`mb-3 text-xl font-bold`];\n\nexport const h3Style = () => [tw`mb-2 text-lg font-bold`];\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css, TwStyle } from 'twin.macro';\n\nexport interface StepperProps {\n  id: string;\n  twProps?: TwStyle;\n  label?: string;\n  max: number;\n  min: number;\n  onChange: (value: number) => void;\n  value: number;\n}\n\nexport function Stepper({\n  value,\n  id,\n  twProps,\n  max,\n  min,\n  label,\n  onChange,\n}: StepperProps) {\n  const decrement = () => {\n    if (value > min) {\n      onChange(value - 1);\n    }\n  };\n\n  const increment = () => {\n    if (value < max) {\n      onChange(value + 1);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    onChange(parseInt(e, 10) || 0);\n  };\n\n  return (\n    <div css={twProps}>\n      {label && (\n        <label tw=\"block mb-1\" htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <div tw=\"w-auto inline-flex\">\n        <button\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 dark:bg-gray-600 hover:dark:bg-gray-500 py-2 px-3 rounded-bl-md rounded-tl-md rounded-tr-none rounded-br-none transition-colors\"\n          type=\"button\"\n          onClick={decrement}\n          aria-controls={id}\n        >\n          –\n        </button>\n        <input\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 focus:bg-gray-200 dark:bg-gray-600 hover:dark:bg-gray-500 focus:dark:bg-gray-500 text-center appearance-none rounded-none transition-colors\"\n          css={{\n            '::-webkit-inner-spin-button': {\n              ' -webkit-appearance': 'none',\n              margin: '0',\n            },\n            '::-webkit-outer-spin-button': {\n              ' -webkit-appearance': 'none',\n              margin: '0',\n            },\n          }}\n          type=\"number\"\n          step=\"1\"\n          id={id}\n          value={value}\n          min={min}\n          max={max}\n          onChange={(e) => handleChange(e.target.value)}\n        />\n        <button\n          tw=\"font-bold bg-gray-300 hover:bg-gray-200 dark:bg-gray-600 hover:dark:bg-gray-500 py-2 px-3 rounded-br-md rounded-tr-md rounded-tl-none rounded-bl-none transition-colors\"\n          type=\"button\"\n          onClick={increment}\n          aria-controls={id}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css, TwStyle } from 'twin.macro';\nimport { h2Style, h3Style } from '../styles';\n\nexport interface HeadingProps {\n  h3?: boolean;\n}\n\nexport function Heading({\n  h3 = false,\n  children,\n}: React.PropsWithChildren<HeadingProps>) {\n  return h3 ? (\n    <h3 css={h3Style()}>{children}</h3>\n  ) : (\n    <h2 css={h2Style()}>{children}</h2>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\n\nimport { useState } from 'react';\nimport { Stepper } from '../components/stepper';\nimport { Heading } from '../components/heading';\nimport { useTranslation } from 'react-i18next';\n\nconst atLeast = (lowest: number) => (value: number) =>\n  value < lowest ? lowest : value;\n\nconst atLeastOne = atLeast(1);\n\nconst getSkillCost = (\n  initial: number,\n  target: number,\n  modifier: number = 0,\n  cost: number = 0\n): number =>\n  initial >= target\n    ? cost\n    : getSkillCost(\n        initial + 1,\n        target,\n        modifier,\n        cost + atLeastOne(initial + 1 + modifier)\n      );\n\nexport const Skills = () => {\n  const { t } = useTranslation('skills');\n  const [current, setCurrent] = useState<number>(1);\n  const [target, setTarget] = useState<number>(2);\n  const [modifier, setModifier] = useState<number>(0);\n\n  const handleCurrentChange = (newCurrent: number) => {\n    setCurrent(newCurrent);\n    if (newCurrent >= target) {\n      setTarget(newCurrent + 1);\n    }\n  };\n\n  const handleTargetChange = (newTarget: number) => {\n    setTarget(newTarget);\n    if (newTarget <= current) {\n      setCurrent(newTarget - 1);\n    }\n  };\n\n  return (\n    <>\n      <Heading>{t('Skill Calculator')}</Heading>\n      <div css={card} tw=\"flex flex-wrap justify-between\">\n        <div tw=\"flex-auto\">\n          <Stepper\n            twProps={tw`mb-2`}\n            id={'current'}\n            label={t('Old Skill Value')}\n            min={1}\n            max={20}\n            value={current}\n            onChange={(value) => handleCurrentChange(value)}\n          ></Stepper>\n\n          <Stepper\n            twProps={tw`mb-2`}\n            id={'target'}\n            label={t('New Skill Value')}\n            min={2}\n            max={20}\n            value={target}\n            onChange={(value) => handleTargetChange(value)}\n          ></Stepper>\n\n          <Stepper\n            twProps={tw`mb-6`}\n            id={'modifier'}\n            label={t('Attribute Modifier')}\n            min={-4}\n            max={4}\n            value={modifier}\n            onChange={(value) => setModifier(value)}\n          ></Stepper>\n        </div>\n        <div tw=\"flex-auto flex flex-col justify-center md:px-16\">\n          <div tw=\"text-center\">{t('Cost')}</div>\n          <div tw=\"text-9xl text-center\">\n            {getSkillCost(current, target, modifier)}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { SegmentProp } from '../pages/names';\n\nexport interface SegmentedControlProps {\n  segments: SegmentProp[];\n  onSegmentClick: (index: number) => void;\n  selectedIndex: number;\n  vertical?: boolean;\n}\n\nexport function SegmentedControl({\n  segments,\n  onSegmentClick,\n  selectedIndex,\n  vertical = false,\n}: SegmentedControlProps) {\n  return (\n    <div tw=\"p-1 bg-gray-300 dark:bg-gray-600 rounded-lg shadow-inner \">\n      <div\n        tw=\"relative grid gap-2\"\n        css={[\n          {\n            gridTemplateColumns: `repeat(${segments.length}, minmax(0, 1fr))`,\n          },\n          vertical && {\n            gridTemplateColumns: '1fr',\n            gridTemplateRows: `repeat(${segments.length}, minmax(0, 1fr))`,\n          },\n        ]}\n      >\n        {segments.map((s, index) => (\n          <button\n            key={`${s.id}-${index}`}\n            tw=\"px-2 py-1 text-sm z-10 rounded-lg relative after:bg-gray-400 after:dark:bg-gray-500\"\n            css={[\n              {\n                outline: 'none !important',\n                ':focus': {\n                  boxShadow: '0 0 4px 0 rgba(96, 165, 250, 1.1)',\n                },\n              },\n              css`\n                &:after {\n                  content: '';\n                  display: block;\n                  position: absolute;\n                  transition: all 300ms ease-in-out;\n                  opacity: ${index === selectedIndex ||\n                  index === selectedIndex - 1\n                    ? 0\n                    : 1};\n                }\n              `,\n              index !== segments.length - 1 &&\n                !vertical &&\n                css`\n                  &:after {\n                    right: -0.25rem;\n                    width: 1px;\n                    height: 1.5rem;\n                    top: 50%;\n                    transform: translateY(-50%);\n                  }\n                `,\n              index !== segments.length - 1 &&\n                vertical &&\n                css`\n                  &:after {\n                    left: 5%;\n                    width: 90%;\n                    height: 1px;\n                    bottom: -0.25rem;\n                    transform: translateY(-50%);\n                  }\n                `,\n            ]}\n            onClick={() => onSegmentClick(index)}\n          >\n            {s.label}\n          </button>\n        ))}\n        <div\n          tw=\"h-full z-0 absolute transition-transform shadow-md rounded-lg bg-white dark:bg-gray-500\"\n          style={{\n            height: `${vertical ? `1.75rem` : ``}`,\n            width: `${\n              vertical\n                ? '100%'\n                : `calc( (100% - ((${segments.length - 1} ) * 0.5rem)) / ${\n                    segments.length\n                  })`\n            }`,\n            transform: `${\n              vertical\n                ? `translateY(calc(${selectedIndex * 100}% + ${\n                    selectedIndex * 0.5\n                  }rem))`\n                : `translateX(calc(${selectedIndex * 100}% + ${\n                    selectedIndex * 0.5\n                  }rem))`\n            }`,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","export const rollDice = (min: number, max: number) => () =>\n  min + Math.floor(Math.random() * (max - min + 1));\n\nexport type ExplodingRange = 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\nexport const validExplodeRange = (value: number): value is ExplodingRange =>\n  value <= 10 && value >= 2;\n\nexport type DiceResults = {\n  sum: number;\n  rolls: number[];\n};\n\nexport const rollDiceWithRolls = (max: number) => (): DiceResults => {\n  const roll = rollDice(1, max)();\n  return {\n    sum: roll,\n    rolls: [roll],\n  };\n};\n\nexport const d2 = rollDiceWithRolls(2);\nexport const d3 = rollDiceWithRolls(3);\nexport const d5 = rollDiceWithRolls(5);\nexport const d10 = rollDiceWithRolls(10);\nexport const d20 = rollDiceWithRolls(20);\n\nconst exploding = (\n  ed: ExplodingRange = 10,\n  rolls: number[] = [],\n  sum: number = 0\n): DiceResults => {\n  const result = d10();\n  const newRolls = [...rolls, result.sum];\n  const newSum = sum + result.sum;\n\n  if (result.sum < ed) return { sum: newSum, rolls: newRolls };\n\n  return exploding(ed, newRolls, newSum);\n};\n\nexport const explodingD10 = (ed: ExplodingRange = 10) => exploding(ed);\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { Stepper } from '../components/stepper';\nimport { buttonPrimary, card, h3Style, buttonSubtle } from '../styles';\nimport {\n  d10,\n  d20,\n  d5,\n  DiceResults,\n  explodingD10,\n  validExplodeRange,\n} from '../utils/dice-roller';\nimport { Heading } from '../components/heading';\nimport { useTranslation } from 'react-i18next';\nimport shortid from 'shortid';\n\ninterface RollResult extends DiceResults {\n  modifier: number;\n}\n\ninterface RollHistoryItem {\n  roll: string;\n  result: string;\n}\n\nexport const Dice = () => {\n  const { t } = useTranslation('dice');\n\n  const segments = [\n    { id: 'd5', label: 'd5' },\n    { id: 'd10', label: 'd10' },\n    { id: 'd10 OR', label: 'd10 OR' },\n    { id: 'd20', label: 'd20' },\n  ].map((d) => ({\n    ...d,\n    label: t(d.label),\n  }));\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n    setDiceResult(undefined);\n  };\n\n  const [modifier, setModifier] = useState(0);\n  const handleModifierChange = (value: number) => {\n    setModifier(value);\n    setDiceResult(undefined);\n  };\n\n  const [explodeOn, setExplodeOn] = useState(10);\n  const handleExplodeOn = (value: number) => {\n    setExplodeOn(value);\n    setDiceResult(undefined);\n  };\n\n  const [rollHistory, setRollHistory] = useState<RollHistoryItem[]>([]);\n  const clearRollHistory = () => setRollHistory([]);\n\n  const [diceResult, setDiceResult] = useState<RollResult | undefined>();\n\n  const getDieType = (die: string) => {\n    switch (die) {\n      case 'd5':\n        return d5;\n      case 'd10':\n        return d10;\n      case 'd10 OR':\n        return explodingD10;\n      case 'd20':\n      default:\n        return d20;\n    }\n  };\n\n  const displaySign = (num: number): string => {\n    return modifier > 0 ? `+ ${modifier}` : `– ${Math.abs(modifier)}`;\n  };\n\n  const getDieToRoll = (): string => {\n    const die = `1${segments[active].label}`;\n\n    const or = `${\n      segments[active].id === 'd10 OR'\n        ? explodeOn === 10\n          ? `(10)`\n          : `(${explodeOn}–10)`\n        : ''\n    }`;\n    const mod = `${modifier !== 0 ? displaySign(modifier) : ''}\n    `;\n    return [die, or, mod].join(' ');\n  };\n\n  const rollDie = () => {\n    const dieFn = getDieType(segments[active].id);\n    const result = {\n      ...(segments[active].id === 'd10 OR' && validExplodeRange(explodeOn)\n        ? dieFn(explodeOn)\n        : dieFn()),\n      modifier,\n    };\n    setDiceResult(result);\n    setRollHistory([\n      {\n        result: result.sum.toString(),\n        roll: getDieToRoll(),\n      },\n      ...rollHistory,\n    ]);\n  };\n\n  return (\n    <>\n      <Heading>{t('Dice Roller')}</Heading>\n      <div tw=\"grid lg:grid-flow-col\" css={card}>\n        <div tw=\"\">\n          <div tw=\"mb-3\">\n            <SegmentedControl\n              segments={segments}\n              selectedIndex={active}\n              onSegmentClick={(index) => handleSegmentClick(index)}\n            ></SegmentedControl>\n          </div>\n          <div tw=\"grid grid-flow-col mb-12 auto-cols-fr\">\n            <Stepper\n              id={'diceModifier'}\n              label={'Modifier'}\n              min={-10}\n              max={10}\n              value={modifier}\n              onChange={(value) => handleModifierChange(value)}\n            ></Stepper>\n            {segments[active].id === 'd10 OR' && (\n              <Stepper\n                id={'explodingModifier'}\n                label={t('Explode on')}\n                min={2}\n                max={10}\n                value={explodeOn}\n                onChange={(value) => handleExplodeOn(value)}\n              ></Stepper>\n            )}\n          </div>\n          <div tw=\"flex justify-center mb-12\">\n            <button tw=\"\" css={buttonPrimary} onClick={rollDie}>\n              {t('Roll')} {getDieToRoll()}\n            </button>\n          </div>\n        </div>\n        <div\n          tw=\"mb-12 text-9xl flex flex-col items-center justify-self-center\"\n          css={[\n            {\n              minHeight: '9rem',\n              minWidth: '3ch',\n              maxWidth: '3ch',\n            },\n          ]}\n        >\n          {diceResult && (\n            <>\n              <div tw=\"text-9xl text-center\">{diceResult.sum}</div>\n              <div tw=\"text-xs dark:text-gray-200 light:text-gray-500 text-center\">\n                {`${t('Rolled dice')}: ${diceResult.rolls.join(' + ')} ${\n                  modifier !== 0 ? displaySign(modifier) : ''\n                }`}\n              </div>\n            </>\n          )}\n        </div>\n        <div>\n          <div tw=\"flex items-center mb-1 justify-between\">\n            <h3 css={[h3Style(), tw`mb-0`]}>{t('Roll History')}</h3>\n            <button css={[buttonSubtle()]} onClick={() => clearRollHistory()}>\n              {t('Clear')}\n            </button>\n          </div>\n          <div tw=\"text-gray-500 dark:text-gray-300 p-3 rounded-lg bg-gray-100 dark:bg-gray-600 overflow-x-scroll h-96\">\n            {rollHistory &&\n              rollHistory.map((rh) => (\n                <div key={shortid.generate()} tw=\"mb-2\">\n                  <div>{rh.roll}</div>\n                  <div tw=\"font-bold\">{rh.result}</div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\n\nimport { Heading } from '../components/heading';\n\nexport interface NameListProps {\n  heading: string;\n  names: string[];\n}\n\nexport const NameList = ({ heading = '', names = [] }: NameListProps) => {\n  return (\n    <>\n      <Heading h3={true}>{heading}</Heading>\n      {names.map((name, index) => (\n        <div tw=\"pb-1\" key={name + index}>\n          {name}\n        </div>\n      ))}\n    </>\n  );\n};\n","import { rollDice } from './dice-roller';\n\nexport const capitalize = (s: string) =>\n  s[0].toUpperCase() + s.slice(1).toLowerCase();\n\nexport const choice = (names: string[]): string => {\n  const randomNumber = rollDice(0, names.length - 1)();\n  return names[randomNumber];\n};\n\nexport const range = (n: number) => Array.from({ length: n }, (_, key) => key);\n\nexport const isDevelopment = () => process.env.NODE_ENV === 'development';\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { buttonPrimary } from '../styles';\n\nimport peopleNames from '../data/people-names.json';\nimport { NameList } from './name-list';\nimport { capitalize, choice, range } from '../utils/utils';\nimport { useTranslation } from 'react-i18next';\nimport { SegmentProp } from '../pages/names';\n\nexport const NamesPeople = () => {\n  const { t } = useTranslation('names');\n\n  const segments: SegmentProp[] = [\n    {\n      id: 'Mittlander',\n      label: 'Mittlander',\n    },\n    {\n      id: 'Stormlander',\n      label: 'Stormlander',\n    },\n    {\n      id: 'Virann',\n      label: 'Virann',\n    },\n    {\n      id: 'Elf',\n      label: 'Elf',\n    },\n    {\n      id: 'Dwarf',\n      label: 'Dwarf',\n    },\n    {\n      id: 'Troll',\n      label: 'Troll',\n    },\n  ].map((seg) => ({ ...seg, label: t(`people.${seg.id}`) }));\n\n  const emptyNames = {\n    male: [],\n    female: [],\n    all: [],\n  };\n\n  const [nameResult, setNameResult] = useState({ ...emptyNames });\n\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n    setNameResult({ ...emptyNames });\n  };\n\n  type Suffix = {\n    [type in string]?: string[];\n  };\n\n  type Names = {\n    people: string;\n    prefix: string[];\n    suffix: Suffix;\n  };\n\n  const handleGenerateNameClick = () => {\n    const type = segments[active].id.toLowerCase();\n\n    const names: Names | undefined = peopleNames.find(\n      (pn) => pn.people === type\n    );\n\n    if (names) {\n      const generatedNames = Object.keys(names.suffix)\n        .filter((k) => names.suffix[k]?.length !== 0)\n        .map((k) => {\n          const suffixes = names.suffix[k];\n\n          return {\n            [k]:\n              suffixes !== undefined\n                ? range(10)\n                    .map((_) => `${choice(names.prefix)}${choice(suffixes)}`)\n                    .map(capitalize)\n                : [''],\n          };\n        })\n        .reduce((acc, cur) => ({ ...acc, ...cur }), {});\n\n      setNameResult(() => ({\n        ...emptyNames,\n        ...generatedNames,\n      }));\n    }\n  };\n\n  return (\n    <div tw=\"flex flex-col justify-center\">\n      <div tw=\"mb-12\">\n        <div tw=\"md:hidden\">\n          <SegmentedControl\n            vertical={true}\n            segments={segments}\n            selectedIndex={active}\n            onSegmentClick={(index) => handleSegmentClick(index)}\n          ></SegmentedControl>\n        </div>\n        <div tw=\"hidden md:block\">\n          <SegmentedControl\n            vertical={false}\n            segments={segments}\n            selectedIndex={active}\n            onSegmentClick={(index) => handleSegmentClick(index)}\n          ></SegmentedControl>\n        </div>\n      </div>\n      <div tw=\"flex justify-center mb-12\">\n        <button tw=\"mb-5\" css={buttonPrimary} onClick={handleGenerateNameClick}>\n          {t('Generate names')}\n        </button>\n      </div>\n      <div\n        tw=\"grid gap-x-2\"\n        css={{\n          gridTemplateColumns: `repeat(${\n            Object.values(nameResult).filter((nr) => nr.length !== 0).length\n          }, minmax(0, 1fr))`,\n        }}\n      >\n        <div tw=\"text-center\">\n          {nameResult.female.length !== 0 && (\n            <NameList\n              heading={t('Female')}\n              names={nameResult.female}\n            ></NameList>\n          )}\n        </div>\n        <div tw=\"text-center\">\n          {nameResult.male.length !== 0 && (\n            <NameList heading={t('Male')} names={nameResult.male}></NameList>\n          )}\n        </div>\n        <div tw=\"text-center\">\n          {nameResult.all.length !== 0 && (\n            <NameList heading={t('All')} names={nameResult.all}></NameList>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { useState } from 'react';\n\nimport { buttonPrimary } from '../styles';\n\nimport { NameList } from './name-list';\nimport { capitalize, choice, range } from '../utils/utils';\nimport { useTranslation } from 'react-i18next';\n\ntype NameGeneratorResource = {\n  prefix: string[];\n  suffix: string[];\n};\n\ninterface GenericNameGeneratorProps {\n  json: NameGeneratorResource;\n  label: string;\n  buttonText: string;\n  maxNames?: number;\n}\n\nexport const GenericNameGenerator = ({\n  json,\n  label,\n  buttonText,\n  maxNames = 10,\n}: GenericNameGeneratorProps) => {\n  const [nameResult, setNameResult] = useState<string[]>([]);\n  const { i18n } = useTranslation();\n\n  const names: NameGeneratorResource = json;\n\n  const handleGenerateNameClick = () =>\n    setNameResult(\n      range(maxNames)\n        .map((_) => [choice(names.prefix), choice(names.suffix)])\n        .map((words) =>\n          i18n.language === 'en' ? words.join(' ') : words.join('')\n        )\n        .map(capitalize)\n    );\n\n  return (\n    <div tw=\"flex flex-col justify-center\">\n      <div tw=\"flex justify-center\">\n        <button\n          tw=\"mb-5\"\n          css={buttonPrimary}\n          onClick={() => handleGenerateNameClick()}\n        >\n          {buttonText}\n        </button>\n      </div>\n      <div tw=\"text-center\">\n        {nameResult.length !== 0 && (\n          <NameList heading={label} names={nameResult}></NameList>\n        )}\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport React, { useState } from 'react';\n\nimport { SegmentedControl } from '../components/segmented-control';\nimport { card } from '../styles';\nimport { Heading } from '../components/heading';\nimport { NamesPeople } from '../components/names-people';\nimport { GenericNameGenerator } from '../components/generic-name-generator';\nimport innNamesSv from '../data/inn-names.json';\nimport villageNamesSv from '../data/village-names-sv.json';\nimport villageNamesEn from '../data/village-names-en.json';\nimport plantNamesSv from '../data/plant-names.json';\nimport { useTranslation } from 'react-i18next';\n\n//type NameGeneratorTypes = 'People' | 'Inns' | 'Villages' | 'Plants';\n\nexport interface SegmentProp {\n  id: string;\n  label: string;\n}\n\nexport const Names = () => {\n  const { t, i18n } = useTranslation('names');\n\n  const nameGenerators: SegmentProp[] = [\n    {\n      id: 'People',\n      label: 'People',\n    },\n    {\n      id: 'Inns',\n      label: 'Inns',\n    },\n    {\n      id: 'Villages',\n      label: 'Villages',\n    },\n    {\n      id: 'Plants',\n      label: 'Plants',\n    },\n  ];\n\n  const segments: SegmentProp[] = nameGenerators.map((ng) => ({\n    ...ng,\n    label: t(`generators.${ng.label}`),\n  }));\n\n  const [active, setActive] = useState(0);\n\n  const handleSegmentClick = (index: number) => {\n    setActive(index);\n  };\n\n  const villageNames = i18n.language === 'sv' ? villageNamesSv : villageNamesEn;\n\n  return (\n    <>\n      <Heading>{t('Name Generators')}</Heading>\n      {i18n.language === 'en' &&\n        nameGenerators[active].label !== 'Villages' && (\n          <div tw=\"text-gray-500 mb-2\">\n            {t('Only Swedish names right now.')}\n          </div>\n        )}\n      <div tw=\"mb-5\">\n        <SegmentedControl\n          segments={segments}\n          selectedIndex={active}\n          onSegmentClick={(index) => handleSegmentClick(index)}\n        ></SegmentedControl>\n      </div>\n      <div css={card} tw=\"flex flex-col justify-center px-3\">\n        {(() => {\n          switch (nameGenerators[active].label) {\n            case 'People':\n              return <NamesPeople></NamesPeople>;\n            case 'Inns':\n              return (\n                // TODO: Fix state\n                <div key=\"inn\">\n                  <GenericNameGenerator\n                    json={innNamesSv}\n                    label={t('Inn')}\n                    buttonText={t(`Generate Inn names`)}\n                  ></GenericNameGenerator>\n                </div>\n              );\n            case 'Villages':\n              return (\n                // TODO: Fix state\n                <div key=\"village\">\n                  <GenericNameGenerator\n                    json={villageNames}\n                    label={t('Village')}\n                    buttonText={t(`Generate Village names`)}\n                  ></GenericNameGenerator>\n                </div>\n              );\n            case 'Plants':\n              return (\n                // TODO: Fix state\n                <div key=\"plant\">\n                  <GenericNameGenerator\n                    json={plantNamesSv}\n                    buttonText={t(`Generate Plant names`)}\n                    label={t('Plant')}\n                  ></GenericNameGenerator>\n                </div>\n              );\n            default:\n              return <NamesPeople></NamesPeople>;\n          }\n        })()}\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\nimport { Heading } from '../components/heading';\n\nexport const Changelog = () => {\n  return (\n    <div tw=\"flex justify-center mb-24\">\n      <div tw=\"max-w-prose\">\n        <Heading>Changelog</Heading>\n        <p tw=\"mb-5\">Changes and improvements to Grymslante.</p>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <div tw=\"text-xs text-gray-400\">2021-02-04</div>\n            <Heading h3={true}>Villages in English</Heading>\n          </header>\n          <p tw=\"mb-2\">\n            After scouring the Internet for words, abusing Google Translate,\n            looking all over Old Norse on Wiktionary and Thesaurus I have\n            translated the village names to English. Some words don't translate\n            well into English and sometime there are multiple meanings. I'm not\n            sure on how to handle the Swedish use of compound words in English\n            since the names of the villages are random, sometimes it's fine\n            without and sometimes not. I will go with not compounding the\n            English names for now, since it might be hard to distinguish where\n            the prefix and the suffix begins.\n          </p>\n          <div tw=\"flex align-baseline text-2xl text-red-500\">\n            <div>&mdash;</div>\n            <div className=\"bilibin\">ZIOX</div>\n          </div>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <div tw=\"text-xs text-gray-400\">2021-02-03</div>\n            <Heading h3={true}>In a mystical land, far far away...</Heading>\n          </header>\n          <p tw=\"mb-2\">\n            I have added the Travel time calculator under the Travel menu. I\n            could not find the actual travel time calculations in my books (is\n            it on the Game Master Screen?) So I took a look at my old source\n            code for the first iteration of my tool for Trudvang — from 2013 —\n            for the actual numbers. It took me a while to figure out how I\n            wanted to structure the data. I settled on an easy solution that\n            probably will need some cleanup in the future. Oh well. It's there\n            now, extreme values might produce hilarious results.\n          </p>\n          <div tw=\"flex align-baseline text-2xl text-red-500\">\n            <div>&mdash;</div>\n            <div className=\"bilibin\">ZIOX</div>\n          </div>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <div tw=\"text-xs text-gray-400\">2021-01-25</div>\n            <Heading h3={true}>I can speak in different languages</Heading>\n          </header>\n          <p tw=\"mb-2\">\n            Trudvang has both Swedish and international players and game\n            masters. It made sense to provide them with the same functionality\n            in their own language. This meant researching and implementing a\n            translation library, I chose{' '}\n            <a\n              tw=\"text-red-500 hover:text-red-400 hover:underline\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://react.i18next.com/\"\n            >\n              react-i18next\n            </a>\n            . Then after a few hours of reading and debugging I got it working.\n            Now I just had to translate the whole app. It went rather smooth. I\n            had to change some data models to fit and create a language switcher\n            at the top. I still don't have resource files in English for names\n            and the items are still in English. But that is only a data\n            collection problem. Soon I will provide fully translated names and\n            items™️\n          </p>\n          <div tw=\"flex align-baseline text-2xl text-red-500\">\n            <div>&mdash;</div>\n            <div className=\"bilibin\">ZIOX</div>\n          </div>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <div tw=\"text-xs text-gray-400\">2021-01-23</div>\n            <Heading h3={true}>Mobile and Tablet view for Item List </Heading>\n          </header>\n          <p tw=\"mb-2\">\n            The table use of the Item List was not working out great on smaller\n            devices. A new design more suited for small devices has been added\n            that automatically switches when on smaller screens.\n          </p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8 light:bg-gray-800 light:text-gray-200\">\n          <header>\n            <div tw=\"text-xs text-gray-400\">2021-01-23</div>\n            <Heading h3={true}>Smart Dark Mode</Heading>\n          </header>\n          <p tw=\"mb-2\">\n            I reworked Dark Mode so that it will now check LocalStorage to see\n            if theme has been set. Otherwise it checks to see what the person\n            prefers, you can select which Theme you want in the settings of your\n            Operating System. If it can't find anything it will default to the\n            Light theme.\n          </p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <div tw=\"text-xs text-gray-400\">2021-01-23</div>\n            <Heading h3={true}>Item List</Heading>\n          </header>\n          <p tw=\"mb-2\">\n            I released the first version of the Item List. It features filtering\n            by type and searching by name.\n          </p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <Heading h3={true}>Added Plants, Villages and Inns</Heading>\n          <p tw=\"mb-2\">\n            Now you can generate names of beer heavy inns, plants from another\n            world and cozy villages.\n          </p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <Heading h3={true}>Fixed colors and Changelog</Heading>\n          <p tw=\"mb-2\">\n            I managed to forget the light theme for the Dice Roller. Darkened\n            the light theme background to make the cards stand out a bit more.\n            Then darkened the footer and removed the top bar background. Added a\n            light theme to the Dice Roller page and tweaked the dark theme.\n            Limited the Changelog to 65 characters for improved readability.\n          </p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <Heading h3={true}>Improve Dice Roller</Heading>\n          <p tw=\"mb-2\">I felt that the Dice Roller was a bit lackluster.</p>\n\n          <ul tw=\"list-disc list-inside pl-2\">\n            <li>Added a section displaying a history of all Dice Rolls.</li>\n            <li>Improved how the Dice Roller page looks on larger screens.</li>\n            <li>\n              Improved how the dice to roll on the Roll-button is displayed.\n            </li>\n            <li>Refactored the Dice Rolling to accommodate the Roll History</li>\n          </ul>\n        </div>\n\n        <div css={card} tw=\"mb-0 p-8\">\n          <Heading h3={true}>Initial release</Heading>\n          <p>\n            Released with a Skill Calculator, Dice Roller and Name Generator.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { compose } from 'rambda';\nimport { CoinPurse, CoinLabels, TradeValue } from './coin.model';\n\nexport const tradeValueToCoinPurse = (tv: TradeValue): CoinPurse => ({\n  gold: Math.floor(tv / 1000),\n  silver: Math.floor((tv % 1000) / 100),\n  copper: (tv % 1000) % 100,\n});\n\nexport const coinPurseToTradeValue = ({\n  gold,\n  silver,\n  copper,\n}: CoinPurse): TradeValue => gold * 1000 + silver * 100 + copper;\n\n// TODO: Make generic?\nconst coinsOrEmptyArray = (x: number, c: string) =>\n  x > 0 ? [`${x} ${c}`] : [];\n\nexport const formatCoinPurse = ({ gc, sc, cc }: CoinLabels) => ({\n  gold,\n  silver,\n  copper,\n}: CoinPurse): string =>\n  [\n    ...coinsOrEmptyArray(gold, gc),\n    ...coinsOrEmptyArray(silver, sc),\n    ...coinsOrEmptyArray(copper, cc),\n  ].join(' ');\n\nexport const tvToFormattedCoins = (coinLabels: CoinLabels) =>\n  compose(formatCoinPurse(coinLabels), tradeValueToCoinPurse);\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { SpecialItem } from '../utils/items/items.model';\nimport { tvToFormattedCoins } from '../utils/items/items-functions';\nimport { capitalize } from '../utils/utils';\nimport { CoinLabels } from '../utils/items/coin.model';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ItemCardProps extends SpecialItem {\n  cardId: string;\n  coinLabels: CoinLabels;\n}\n\nexport const ItemCard = ({\n  name,\n  tradeValue,\n  type,\n  special,\n  weightInKg,\n  cardId,\n  coinLabels,\n}: ItemCardProps) => {\n  const { t } = useTranslation('items');\n  return (\n    <div\n      key={cardId}\n      tw=\"px-2 py-3 \n      border-b last-of-type:border-b-0 \n      odd-of-type:bg-gray-100 dark:odd-of-type:bg-gray-700 \n      hover:bg-gray-200 dark:hover:bg-gray-600 \n      light:border-gray-200 dark:border-gray-600\"\n    >\n      <div tw=\"mb-1 flex justify-between items-baseline sm:flex-col sm:justify-start\">\n        <div tw=\"font-bold\">{name}</div>\n        <div tw=\"text-xs sm:order-first\">{capitalize(t(type))}</div>\n      </div>\n\n      <div tw=\"grid grid-cols-3 auto-rows-auto sm:grid-cols-9 sm:grid-rows-1 gap-2\">\n        <div tw=\"italic sm:not-italic text-left col-span-3\">\n          <div tw=\"hidden sm:block text-xs\">{t('Header-Special')}</div>\n          <div>{special ? <>{special}</> : <>&ndash;</>}</div>\n        </div>\n\n        <div tw=\"text-right col-span-1 sm:col-span-2\">\n          <div tw=\"text-xs\">{t('Header-Weight')}</div>\n          <div tw=\"font-medium\">\n            {weightInKg ? <>{weightInKg} kg</> : <>&ndash;</>}\n          </div>\n        </div>\n\n        <div tw=\"text-right col-span-1 sm:col-span-2\">\n          <div tw=\"text-xs\">{t('Header-TradeValue')}</div>\n          <div tw=\"font-medium\">{tradeValue}</div>\n        </div>\n\n        <div tw=\"text-right col-span-1 sm:col-span-2\">\n          <div tw=\"text-xs\">{t('Header-Coins')}</div>\n          <div tw=\"font-medium\">\n            {tvToFormattedCoins(coinLabels)(tradeValue)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { card, filterButtonStyle } from '../styles';\nimport { Heading } from '../components/heading';\nimport itemDataSv from '../data/items.json';\nimport { SpecialItem } from '../utils/items/items.model';\nimport { tvToFormattedCoins } from '../utils/items/items-functions';\nimport { compose, map, pluck, uniq } from 'rambda';\nimport { capitalize } from '../utils/utils';\nimport { ItemCard } from '../components/item-card';\nimport { useTranslation } from 'react-i18next';\n\ninterface FilterButton {\n  type: string;\n  active: boolean;\n}\n\ninterface Sorting<T> {\n  key: keyof T;\n  ascending: boolean;\n}\n\ntype Query = string;\n\ninterface ItemList<T> {\n  results: readonly T[];\n  searchQuery: Query;\n  sorting: Sorting<T>;\n  filters: readonly FilterButton[];\n}\n\nexport const Items = () => {\n  const { t } = useTranslation('items');\n  const items: readonly SpecialItem[] = itemDataSv;\n\n  const uniqueItemTypes = (is: SpecialItem[]) =>\n    compose(uniq, (is: SpecialItem[]) => pluck('type', is))(is);\n\n  const createFilterButton = (type: string): FilterButton => ({\n    type,\n    active: false,\n  });\n\n  const uniqueFilterButtons = compose(map(createFilterButton), uniqueItemTypes);\n\n  const [itemList, setItemList] = useState<ItemList<SpecialItem>>({\n    filters: uniqueFilterButtons(items.slice(0)),\n    results: items.slice(0),\n    searchQuery: '',\n    sorting: {\n      key: 'name',\n      ascending: true,\n    },\n  });\n\n  const updateFilterButtons = (\n    { type, active }: FilterButton,\n    fbs: readonly FilterButton[]\n  ): readonly FilterButton[] =>\n    fbs.slice(0).map((fb) =>\n      fb.type !== type\n        ? fb\n        : {\n            ...fb,\n            active: !active,\n          }\n    );\n\n  const itemNameFilter = (query: Query) => (i: SpecialItem): i is SpecialItem =>\n    i.name.toLowerCase().includes(query.toLowerCase());\n\n  const itemTypeFilter = (fb: readonly FilterButton[]) => (\n    itms: readonly SpecialItem[]\n  ): readonly SpecialItem[] =>\n    itms.filter((i) =>\n      fb\n        .filter((fb) => fb.active)\n        .map((fb) => fb.type)\n        .includes(i.type)\n    );\n\n  const onlyFilterByTypeFunctionIfOneActive = (\n    filterButtons: readonly FilterButton[]\n  ) => (itms: readonly SpecialItem[]): readonly SpecialItem[] =>\n    filterButtons.every((fb) => fb.active === false)\n      ? itms.slice(0)\n      : itemTypeFilter(filterButtons)(itms);\n\n  const filterItemsByType = (\n    fb: FilterButton,\n    itemList: ItemList<SpecialItem>\n  ) => {\n    const newFilterButtons = updateFilterButtons(fb, itemList.filters);\n\n    setItemList(() => ({\n      ...itemList,\n      searchQuery: itemList.searchQuery,\n      filters: newFilterButtons,\n      results:\n        itemList.searchQuery === ''\n          ? onlyFilterByTypeFunctionIfOneActive(newFilterButtons)(items)\n          : onlyFilterByTypeFunctionIfOneActive(newFilterButtons)(items).filter(\n              itemNameFilter(itemList.searchQuery)\n            ),\n    }));\n  };\n\n  const search = (query: string) => {\n    setItemList(() => ({\n      ...itemList,\n      searchQuery: query,\n      results:\n        query === ''\n          ? items.slice(0)\n          : onlyFilterByTypeFunctionIfOneActive(itemList.filters)(items).filter(\n              itemNameFilter(query)\n            ),\n    }));\n  };\n\n  // const [ascending, setAscending] = useState(true);\n  // const [sortKey, setSortKey] = useState<keyof SpecialItem>('name');\n\n  // const sort = (key: keyof SpecialItem, ascending: boolean = true) => {\n  //   const localAscending = key === sortKey ? !ascending : true;\n\n  //   const sortedPart = results\n  //     .slice(0)\n  //     .filter((i) => !isNullish(i[key]))\n  //     .sort((a, b) => {\n  //       const itemA = a[key];\n  //       const itemB = b[key];\n\n  //       if (isString(itemA) && isString(itemB)) {\n  //         return localAscending\n  //           ? stringAscending(itemA, itemB)\n  //           : stringDescending(itemA, itemB);\n  //       }\n\n  //       if (isNumber(itemA) && isNumber(itemB)) {\n  //         return localAscending\n  //           ? numberAscending(itemA, itemB)\n  //           : numberDescending(itemA, itemB);\n  //       }\n\n  //       return 0;\n  //     });\n\n  //   const unsortedPart = results.slice(0).filter((i) => isNullish(i[key]));\n\n  //   setResults(() => [...sortedPart, ...unsortedPart]);\n\n  //   if (key === sortKey) {\n  //     setAscending(!ascending);\n  //   }\n\n  //   setSortKey(key);\n  // };\n\n  const tableCellStyle = () => [tw`px-2 py-2`];\n\n  const inputRef = useRef<any>();\n  useEffect(() => {\n    inputRef?.current?.focus();\n  });\n\n  return (\n    <>\n      <Heading>{t('Items')}</Heading>\n      <div css={card}>\n        <div tw=\"flex justify-between flex-col lg:flex-row mb-4\">\n          <div tw=\"lg:order-last mb-4\">\n            <div tw=\"flex flex-wrap gap-2\">\n              {itemList.filters.map((filter) => (\n                <button\n                  key={filter.type}\n                  onClick={() => filterItemsByType(filter, itemList)}\n                  tw=\"flex-grow flex-shrink\"\n                  css={[\n                    css`\n                      word-break: keep-all;\n                    `,\n                    filterButtonStyle(filter.active),\n                  ]}\n                >\n                  {capitalize(t(filter.type))}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"item-search\">{t('Search')}: </label>\n            <input\n              id=\"item-search\"\n              tw=\"mb-4 rounded-lg border border-gray-400 dark:bg-gray-600 dark:shadow dark:border-0 py-1 px-2\"\n              type=\"text\"\n              onChange={(e) => search(e.target.value)}\n              ref={inputRef}\n            />\n          </div>\n        </div>\n        <div tw=\"md:hidden\">\n          {itemList.results.map((item, index) => (\n            <div key={index.toString()}>\n              <ItemCard\n                {...item}\n                cardId={`${item.name}-${item.tradeValue.toString}-mobile`}\n                coinLabels={{\n                  gc: t('Unit-GoldCoin'),\n                  sc: t('Unit-SilverCoin'),\n                  cc: t('Unit-CopperCoin'),\n                }}\n              ></ItemCard>\n            </div>\n          ))}\n        </div>\n        <table tw=\"w-full hidden md:table\">\n          <thead tw=\"table-header-group\">\n            <tr tw=\"table-row border-b\">\n              <th\n                tw=\"table-cell text-left\"\n                css={tableCellStyle}\n                // onClick={() => sort('name', ascending)}\n              >\n                {t('Header-Name')}\n              </th>\n              <th css={tableCellStyle} tw=\"table-cell text-left\">\n                Special\n              </th>\n              {itemList.results.some((i) => i.weightInKg) && (\n                <th\n                  css={tableCellStyle}\n                  tw=\"table-cell text-right\"\n                  // onClick={() => sort('weightInKg', ascending)}\n                >\n                  {t('Header-Weight')}\n                </th>\n              )}\n\n              <th\n                css={tableCellStyle}\n                tw=\"table-cell text-right\"\n                // onClick={() => sort('tradeValue', ascending)}\n              >\n                {t('Header-TradeValue')}\n              </th>\n              <th\n                css={tableCellStyle}\n                tw=\"table-cell text-right\"\n                // onClick={() => sort('tradeValue', ascending)}\n              >\n                {t('Header-Coins')}\n              </th>\n              {/* <th></th> */}\n            </tr>\n          </thead>\n          <tbody>\n            {itemList.results.map((i) => (\n              <tr\n                key={i.name + i.tradeValue.toString()}\n                tw=\"border-b last-of-type:border-b-0 odd-of-type:bg-gray-100 dark:odd-of-type:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 table-row light:border-gray-200 dark:border-gray-600\"\n              >\n                <td css={tableCellStyle} tw=\"table-cell\">\n                  {i.name}\n                </td>\n                <td css={tableCellStyle} tw=\"table-cell\">\n                  {i.special}\n                </td>\n                {itemList.results.some((i) => i.weightInKg) && (\n                  <td css={tableCellStyle} tw=\"table-cell text-right\">\n                    {i.weightInKg && <>{i.weightInKg} kg</>}\n                  </td>\n                )}\n                <td css={tableCellStyle} tw=\"table-cell text-right\">\n                  {i.tradeValue} {t('Unit-TradeValue')}\n                </td>\n                <td css={tableCellStyle} tw=\"table-cell text-right\">\n                  {tvToFormattedCoins({\n                    gc: t('Unit-GoldCoin'),\n                    sc: t('Unit-SilverCoin'),\n                    cc: t('Unit-CopperCoin'),\n                  })(i.tradeValue)}\n                </td>\n                {/* <td css={tableCellStyle} tw=\"table-cell text-right w-6\">\n                  <div tw=\"flex justify-end\">\n                    <button tw=\"rounded-full shadow w-5 h-5 flex justify-center font-bold pb-0.5 items-center self-end text-center leading-none bg-green-600 text-gray-100\">\n                      <span>+</span>\n                    </button>\n                  </div>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n","export enum TransportSpeed {\n  Foot = 'Foot',\n  Wagon = 'Wagon',\n  Horse = 'Horse',\n  Boat = 'Boat',\n}\n\ntype TransportSpeeds = {\n  [MOT in keyof typeof TransportSpeed]: number;\n};\n\nexport enum TravelSpeed {\n  WalkInShadows = 'WalkInShadows',\n  Slow = 'Slow',\n  Normal = 'Normal',\n  Fast = 'Fast',\n  Quick = 'Quick',\n}\n\ntype TravelSpeeds = {\n  [TS in keyof typeof TravelSpeed]: number;\n};\n\nexport enum Landscape {\n  Plains = 'Plains',\n  LightlyHilly = 'LightlyHilly',\n  Hilly = 'Hilly',\n  Mountainous = 'Mountainous',\n}\n\ntype Landscapes = {\n  [L in keyof typeof Landscape]: number;\n};\n\nexport enum Terrain {\n  Road = 'Road',\n  Grass = 'Grass',\n  GrassHigh = 'GrassHigh',\n  Forest = 'Forest',\n  ForestThick = 'ForestThick',\n  CityEmpty = 'CityEmpty',\n  CityNormal = 'CityNormal',\n  CityCrowd = 'CityCrowd',\n  VillageEmpty = 'VillageEmpty',\n  VillageNormal = 'VillageNormal',\n  VillageCrowd = 'VillageCrowd',\n}\n\ntype Terrains = {\n  [T in keyof typeof Terrain]: number;\n};\n\nexport enum Passability {\n  Normal = 'Normal',\n  SomewhatDifficult = 'SomewhatDifficult',\n  Difficult = 'Difficult',\n  VeryDifficult = 'VeryDifficult',\n  ExtremelyDifficult = 'ExtremelyDifficult',\n}\n\ntype Passabilities = {\n  [P in keyof typeof Passability]: number;\n};\n\nexport enum Weather {\n  Normal = 'Normal',\n  Rain = 'Rain',\n  HeavyRain = 'HeavyRain',\n  Snowing = 'Snowing',\n  Blizzard = 'Blizzard',\n  SnowLittle = 'SnowLittle',\n  Snow = 'Snow',\n  SnowMuch = 'SnowMuch',\n}\n\ntype Weathers = {\n  [W in keyof typeof Weather]: number;\n};\n\nconst transportSpeeds: TransportSpeeds = {\n  Foot: 5,\n  Wagon: 15,\n  Horse: 20,\n  Boat: 15,\n};\n\nconst travelSpeeds: TravelSpeeds = {\n  WalkInShadows: 0.2,\n  Slow: 0.75,\n  Normal: 1,\n  Fast: 1.5,\n  Quick: 2,\n};\n\nconst landscapes: Landscapes = {\n  Plains: 1,\n  LightlyHilly: 0.75,\n  Hilly: 0.5,\n  Mountainous: 0.3,\n};\n\nconst terrains: Terrains = {\n  Road: 1,\n  Grass: 0.8,\n  GrassHigh: 0.75,\n  Forest: 0.5,\n  ForestThick: 0.25,\n  CityEmpty: 0.75,\n  CityNormal: 0.5,\n  CityCrowd: 0.25,\n  VillageEmpty: 1,\n  VillageNormal: 0.75,\n  VillageCrowd: 0.5,\n};\n\nconst passabilities: Passabilities = {\n  Normal: 1,\n  SomewhatDifficult: 0.8,\n  Difficult: 0.6,\n  VeryDifficult: 0.3,\n  ExtremelyDifficult: 0.1,\n};\n\nconst weathers: Weathers = {\n  Normal: 1,\n  Rain: 0.9,\n  HeavyRain: 0.75,\n  Snowing: 0.8,\n  Blizzard: 0.5,\n  SnowLittle: 0.75,\n  Snow: 0.5,\n  SnowMuch: 0.3,\n};\n\nexport interface TravelTimeOptions {\n  travelTimePerDay?: number;\n  transportSpeed: TransportSpeed;\n  travelSpeed: TravelSpeed;\n  landscape: Landscape;\n  terrain: Terrain;\n  passability: Passability;\n  weather: Weather;\n}\n\nexport interface TravelTimeResults {\n  hours: number;\n  travelDays: number;\n}\n\n/**\n *\n * @param travelTimePerDay How much per day of actual traveling. Defaults to 8\n */\nexport const getTravelTime = ({\n  travelTimePerDay = 8,\n  transportSpeed,\n  travelSpeed,\n  landscape,\n  terrain,\n  passability,\n  weather,\n}: TravelTimeOptions) => (distanceInKm: number): TravelTimeResults => {\n  // Stupid division maths makes this so much harder to\n  // reason about.\n  const timeInHours =\n    distanceInKm /\n    transportSpeeds[transportSpeed] /\n    travelSpeeds[travelSpeed] /\n    landscapes[landscape] /\n    terrains[terrain] /\n    passabilities[passability] /\n    weathers[weather];\n\n  return {\n    hours: timeInHours,\n    travelDays: timeInHours / travelTimePerDay,\n  };\n};\n\n// getTravelTime(TransportSpeed.Foot, TravelSpeed.Normal)(30);\n\n// export function se() {\n//   function c() {\n//     function b() {\n//       c = h;\n//       z(p, function (a) {\n//         c /= a;\n//       });\n//       a = c / (e ? 24 : 6);\n//       s.textContent = c.toFixed(2) + ' timmar – ' + a.toFixed(2) + ' dagar';\n//       d[r] = a;\n//       g[r] = c;\n//       c = a = 0;\n//       z(d, function (b, d) {\n//         a += b;\n//         c += g[d];\n//       });\n//       k.nodeValue = c.toFixed(2) + ' timmar – ' + a.toFixed(2) + ' dagar';\n//       var a, c;\n//     }\n//     function c(a, d) {\n//       f = p.length;\n//       Ya(t, a, d, f ? 1 : 5, function (a) {\n//         a || ((e = !a) && (a = 15));\n//         p[f] = a;\n//         b();\n//       });\n//       p[f] = 1;\n//       var f;\n//     }\n//     h = 1;\n//     p = [];\n//     t = a(0, 'class', 'panel_box');\n\n//     c('Färdsätt', [\n//       [5, 'till fots'],\n//       [15, 'häst och vagn'],\n//       [20, 'häst'],\n//       [0, 'båt'],\n//     ]);\n//     c('Hastighet', [\n//       [0.2, 'dold förflyttning'],\n//       [0.75, 'långsam'],\n//       [1, 'normal'],\n//       [1.5, 'snabb'],\n//       [2, 'mycket snabb'],\n//     ]);\n//     c('Landskap', [\n//       [1, 'slätt'],\n//       [0.75, 'lätt kuperat'],\n//       [0.5, 'kuperat'],\n//       [0.3, 'bergigt'],\n//     ]);\n//     c('Terräng', [\n//       [1, 'väg'],\n//       [0.8, 'gräs'],\n//       [0.75, 'högt gräs'],\n//       [0.5, 'skog'],\n//       [0.25, 'tät skog'],\n//       [0.25, 'stad (folkmassa)'],\n//       [0.5, 'stad (normal)'],\n//       [0.75, 'stad (folktomt)'],\n//       [0.5, 'by (folkmassa)'],\n//       [0.75, 'by (normal)'],\n//       [1, 'by (folktomt)'],\n//     ]);\n//     c('Framkomlighet', [\n//       [1, 'normal'],\n//       [0.8, 'något svår'],\n//       [0.6, 'svår'],\n//       [0.3, 'mycket svår'],\n//       [0.1, 'extremt svår'],\n//     ]);\n//     c('Väderförhållande', [\n//       [1, 'normal'],\n//       [0.9, 'regn'],\n//       [0.75, 'mycket regn'],\n//       [0.8, 'lite snöigt'],\n//       [0.5, 'mycket snöigt'],\n//       [0.75, 'lite snö'],\n//       [0.5, 'snö'],\n//       [0.3, 'mycket snö'],\n//     ]);\n//     p[0] = 5;\n//     s = tb(t, 'Restid');\n//     r = d.length;\n//     b();\n//     Qb(\n//       f,\n//       'Etapp ' + (r + 1),\n//       function () {\n//         return t;\n//       },\n//       1\n//     );\n//     var e, h, p, r, s, t;\n//   }\n//   d = [];\n//   g = [];\n//   f = a();\n//   h = b(a(0, 'class', 'panel_body_dark'), f);\n//   nb(h);\n//   dc(h, 'Lägg till etapp', c);\n//   k = tb(h, 'Totalt');\n//   c();\n//   b(\n//     ka,\n//     b(\n//       a(0, 'class', 'panel'),\n//       b(\n//         a(0, 'class', 'panel_head'),\n//         b(a(0, 'class', 'panel_title'), e('Restid'))\n//       ),\n//       h\n//     )\n//   );\n//   var d, g, f, h, k;\n// }\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport { filterButtonStyle } from '../styles';\nimport { Theme } from '../services/dark-mode.service';\nimport { useTranslation } from 'react-i18next';\n\ninterface ThemeSwitcherProps {\n  toggleTheme: () => void;\n  theme: Theme;\n}\n\nexport const ThemeSwitcher = ({ theme, toggleTheme }: ThemeSwitcherProps) => {\n  const { t } = useTranslation('core');\n\n  return (\n    <div>\n      <button css={[filterButtonStyle()]} onClick={() => toggleTheme()}>\n        {theme === 'dark' ? t('Back to the Light') : t('Embrace the Darkness')}\n      </button>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport { filterButtonStyle } from '../styles';\nimport { useTranslation } from 'react-i18next';\n\nexport const LanguageSwitcher = () => {\n  const { t, i18n } = useTranslation('core');\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <div>\n      <button\n        css={[tw`mr-2`, filterButtonStyle(i18n.language === 'en')]}\n        onClick={() => changeLanguage('en')}\n        disabled={i18n.language === 'en'}\n      >\n        {t('English')}\n      </button>\n      <button\n        css={[filterButtonStyle(i18n.language === 'sv')]}\n        onClick={() => changeLanguage('sv')}\n        disabled={i18n.language === 'sv'}\n      >\n        {t('Swedish')}\n      </button>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\n\nimport { useTranslation } from 'react-i18next';\n\ntype TranslationNamesSpaces =\n  | 'TransportSpeed'\n  | 'TravelSpeed'\n  | 'Passability'\n  | 'Terrain'\n  | 'Landscape'\n  | 'Weather';\n\ninterface TravelButtonProps<T> {\n  travel: T;\n  translationNameSpace: TranslationNamesSpaces;\n  active: keyof T;\n  onChange: (x: any) => void;\n}\n\nexport function TravelButton<T>({\n  travel,\n  translationNameSpace,\n  active,\n  onChange,\n}: TravelButtonProps<T>) {\n  const { t } = useTranslation('travel');\n\n  // const [travel, setTravel] = useState(getDefaultTravelCalculationOptions);\n\n  return (\n    <>\n      {Object.keys(travel).map((te) => (\n        <button\n          key={te}\n          css={[\n            tw`rounded-lg\n            text-gray-900 dark:text-gray-300 \n            bg-gray-300 hover:bg-gray-400\n            dark:bg-gray-600 dark:hover:bg-gray-500\n            shadow hover:shadow-md\n            transform-gpu\n            translate-y-0\n            hover:-translate-y-px leading-5 px-2 py-1`,\n            active === (te as keyof typeof travel) &&\n              tw`bg-red-500 dark:bg-red-500 hover:bg-red-500 hover:dark:bg-red-500 text-white dark:text-white`,\n          ]}\n          onClick={() => onChange(te as keyof typeof travel)}\n        >\n          {t(`${translationNameSpace}.${te}`)}\n        </button>\n      ))}\n    </>\n  );\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { buttonSubtle, card } from '../styles';\n\nimport { useState } from 'react';\nimport { Stepper } from '../components/stepper';\nimport { Heading } from '../components/heading';\nimport { useTranslation } from 'react-i18next';\nimport {\n  getTravelTime,\n  Landscape,\n  Passability,\n  Terrain,\n  TransportSpeed,\n  TravelSpeed,\n  TravelTimeOptions,\n  Weather,\n  TravelTimeResults,\n} from '../utils/travel/travel';\nimport { TravelButton } from '../components/travel-button';\n\nexport const Travel = () => {\n  const { t } = useTranslation('travel');\n\n  interface TravelCalculationOptions extends TravelTimeOptions {\n    distanceInKm: number;\n    result?: TravelTimeResults;\n  }\n\n  const getDefaultTravelCalculationOptions: TravelCalculationOptions = {\n    transportSpeed: TransportSpeed.Foot,\n    travelSpeed: TravelSpeed.Normal,\n    landscape: Landscape.Plains,\n    terrain: Terrain.Road,\n    passability: Passability.Normal,\n    weather: Weather.Normal,\n    distanceInKm: 1,\n    result: undefined,\n  };\n\n  const [travel, setTravel] = useState({\n    ...getDefaultTravelCalculationOptions,\n    result: getTravelTime(getDefaultTravelCalculationOptions)(\n      getDefaultTravelCalculationOptions.distanceInKm\n    ),\n  });\n\n  // console.log(Object.keys(TravelSpeed).map((ts) => { label: t(`TravelSpeed.${ts}`), value: ts}));\n\n  const updateTravel = (options: TravelCalculationOptions) =>\n    setTravel({\n      ...options,\n      result: getTravelTime({ ...options })(options.distanceInKm),\n    });\n\n  const changeTravelSpeed = (travelSpeed: TravelSpeed) =>\n    updateTravel({ ...travel, travelSpeed });\n\n  const changeTransportSpeed = (transportSpeed: TransportSpeed) =>\n    updateTravel({ ...travel, transportSpeed });\n\n  const changeLandscape = (landscape: Landscape) =>\n    updateTravel({ ...travel, landscape });\n\n  const changeTerrain = (terrain: Terrain) =>\n    updateTravel({ ...travel, terrain });\n\n  const changePassability = (passability: Passability) =>\n    updateTravel({ ...travel, passability });\n\n  const changeWeather = (weather: Weather) =>\n    updateTravel({ ...travel, weather });\n\n  const changeDistance = (distanceInKm: number) =>\n    updateTravel({ ...travel, distanceInKm });\n\n  const resetTravel = () =>\n    updateTravel({\n      ...getDefaultTravelCalculationOptions,\n      result: getTravelTime(getDefaultTravelCalculationOptions)(\n        getDefaultTravelCalculationOptions.distanceInKm\n      ),\n    });\n\n  const formatNumber = (x: number) =>\n    Math.round((x + Number.EPSILON) * 100) / 100;\n\n  return (\n    <>\n      <Heading>{t('Header-TravelTime')}</Heading>\n      <div css={card} tw=\"\">\n        <div tw=\"flex justify-between items-center\">\n          <Heading h3={true}>{t('Header-TransportSpeed')}</Heading>\n          <button css={[buttonSubtle()]} onClick={() => resetTravel()}>\n            {t('Clear')}\n          </button>\n        </div>\n        <div tw=\"flex gap-2 flex-wrap mb-4 flex-auto max-w-prose\">\n          <TravelButton\n            travel={TransportSpeed}\n            translationNameSpace={'TransportSpeed'}\n            active={travel.transportSpeed}\n            onChange={changeTransportSpeed}\n          ></TravelButton>\n        </div>\n        <Heading h3={true}>{t('Header-TravelSpeed')}</Heading>\n        <div tw=\"flex gap-2 flex-wrap mb-4 flex-auto max-w-prose\">\n          <TravelButton\n            travel={TravelSpeed}\n            translationNameSpace={'TravelSpeed'}\n            active={travel.travelSpeed}\n            onChange={changeTravelSpeed}\n          ></TravelButton>\n        </div>\n        <Heading h3={true}>{t('Header-Landscape')}</Heading>\n        <div tw=\"flex gap-2 flex-wrap mb-4 flex-auto max-w-prose\">\n          <TravelButton\n            travel={Landscape}\n            translationNameSpace={'Landscape'}\n            active={travel.landscape}\n            onChange={changeLandscape}\n          ></TravelButton>\n        </div>\n        <Heading h3={true}>{t('Header-Terrain')}</Heading>\n        <div tw=\"flex gap-2 flex-wrap mb-4 flex-auto max-w-prose\">\n          <TravelButton\n            travel={Terrain}\n            translationNameSpace={'Terrain'}\n            active={travel.terrain}\n            onChange={changeTerrain}\n          ></TravelButton>\n        </div>\n        <Heading h3={true}>{t('Header-Passability')}</Heading>\n        <div tw=\"flex gap-2 flex-wrap mb-4 flex-auto max-w-prose\">\n          <TravelButton\n            travel={Passability}\n            translationNameSpace={'Passability'}\n            active={travel.passability}\n            onChange={changePassability}\n          ></TravelButton>\n        </div>\n        <Heading h3={true}>{t('Header-Weather')}</Heading>\n        <div tw=\"flex gap-2 flex-wrap mb-4 flex-auto max-w-prose\">\n          <TravelButton\n            travel={Weather}\n            translationNameSpace={'Weather'}\n            active={travel.weather}\n            onChange={changeWeather}\n          ></TravelButton>\n        </div>\n        <Stepper\n          id=\"distance\"\n          max={100000}\n          min={1}\n          value={travel.distanceInKm}\n          label={t('Header-Distance')}\n          onChange={changeDistance}\n          twProps={tw`mb-8`}\n        ></Stepper>\n        <div tw=\"flex justify-center text-5xl\">\n          {formatNumber(travel.result?.hours)}{' '}\n          {t('Label-Hour', { count: travel.result?.hours })}\n        </div>\n        <div tw=\"flex justify-center text-2xl text-gray-500\">\n          {formatNumber(travel.result?.travelDays)}{' '}\n          {t('Label-Day', { count: travel.result?.travelDays })}\n        </div>\n      </div>\n    </>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw, { css } from 'twin.macro';\nimport { card } from '../styles';\nimport { Heading } from '../components/heading';\n\nexport const Credits = () => {\n  return (\n    <div tw=\"flex justify-center mb-24\">\n      <div tw=\"max-w-prose\">\n        <Heading>Credits</Heading>\n        <p tw=\"mb-5\">\n          Grymslante could not have been made without these people.\n        </p>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <Heading h3={true}>Names</Heading>\n          </header>\n          <p tw=\"mb-4\">\n            RiotMinds for peoples names and the name for this app.\n          </p>\n          <p tw=\"mb-4\">\n            Anders Blom and the RiotMinds forumists for peoples names.\n          </p>\n          <p tw=\"mb-4\">\n            Turgalt Bronsskägg, Vainothell, Jekub, Jeraes, Huggtanden, Modde\n            Troll, Dorum, Mekradoni, Foul Lich, Eriq and Namare for village\n            names.\n          </p>\n          <p tw=\"mb-4\">\n            Vainothell, Jekub, Dorum, Mekradoni, Foul Lich, Fengald and Lord\n            Fluffo for plant names.\n          </p>\n          <p tw=\"mb-4\">\n            I can't find where I got the names for inns, it was probably over\n            five years ago, thank you.\n          </p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <Heading h3={true}>Items</Heading>\n          </header>\n          <p tw=\"mb-4\">RiotMinds for all items.</p>\n        </div>\n\n        <div css={card} tw=\"mb-8 p-8\">\n          <header>\n            <Heading h3={true}>Skills, Dice and Travel</Heading>\n          </header>\n          <p tw=\"mb-4\">RiotMinds for all mechanics.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport tw from 'twin.macro';\nimport React from 'react';\nimport './App.css';\nimport { Navbar } from './components/navbar';\nimport { Footer } from './components/footer';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Skills } from './pages/skills';\nimport { Dice } from './pages/dice';\nimport { Names } from './pages/names';\nimport { Changelog } from './pages/changelog';\nimport { Items } from './pages/items';\nimport { useDarkMode } from './services/dark-mode.service';\nimport { useTranslation } from 'react-i18next';\nimport { ThemeSwitcher } from './components/theme-switcher';\nimport { LanguageSwitcher } from './components/language-switcher';\nimport { Travel } from './pages/travel';\nimport { Credits } from './pages/credits';\n\nfunction App() {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  const { t } = useTranslation('core');\n\n  if (!componentMounted) {\n    return <div />;\n  }\n\n  return (\n    <Router>\n      <div className={`app ${theme}`}>\n        <div tw=\"flex flex-col min-h-screen transition-colors light:bg-gray-100 light:text-gray-800 dark:bg-gray-900 dark:text-gray-300\">\n          <div tw=\"pb-4 flex-auto flex-shrink-0\">\n            <div tw=\"pt-3 px-3 mb-6 flex justify-between\">\n              <LanguageSwitcher></LanguageSwitcher>\n              <ThemeSwitcher\n                toggleTheme={toggleTheme}\n                theme={theme}\n              ></ThemeSwitcher>\n            </div>\n\n            <h1 className=\"bilibin\" tw=\"px-3 text-4xl mb-3 text-red-500\">\n              {t('Grymslante')}\n            </h1>\n\n            <Navbar />\n            <div tw=\"px-3 container mx-auto\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Names />\n                </Route>\n                <Route path=\"/skills\">\n                  <Skills />\n                </Route>\n                <Route path=\"/dice\">\n                  <Dice />\n                </Route>\n                <Route path=\"/names\">\n                  <Names />\n                </Route>\n                <Route path=\"/changelog\">\n                  <Changelog />\n                </Route>\n                <Route path=\"/items\">\n                  <Items />\n                </Route>\n                <Route path=\"/travel\">\n                  <Travel />\n                </Route>\n                <Route path=\"/credits\">\n                  <Credits />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n          <Footer></Footer>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport type Theme = 'light' | 'dark';\n\nconst isTheme = (s: string): s is Theme => s === 'light' || s === 'dark';\n\nexport const useDarkMode = (): [Theme, () => void, boolean] => {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = (mode: Theme) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n\n    if (localTheme && isTheme(localTheme)) {\n      setTheme(localTheme);\n    } else if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !localTheme\n    ) {\n      setMode('dark');\n    } else {\n      setTheme('light');\n    }\n\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted];\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { isDevelopment } from './utils/utils';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\nconst i18nReact = i18n;\nconst loadPath = isDevelopment()\n  ? 'grymslante/locales/{{lng}}/{{ns}}.json'\n  : 'locales/{{lng}}/{{ns}}.json';\n\ni18nReact\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: false,\n    supportedLngs: ['en', 'sv'],\n    ns: ['core', 'dice', 'items', 'names', 'skills'],\n    backend: {\n      loadPath,\n    },\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18nReact;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyles } from 'twin.macro';\nimport { I18nextProvider } from 'react-i18next';\nimport i18nReact from './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <I18nextProvider i18n={i18nReact}>\n      <Suspense fallback={'Loading...'}>\n        <App />\n      </Suspense>\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}